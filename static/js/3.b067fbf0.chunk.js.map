{"version":3,"sources":["../node_modules/rc-util/es/Children/toArray.js","../node_modules/antd/es/form/context.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/rc-field-form/es/FieldContext.js","../node_modules/rc-field-form/es/utils/typeUtil.js","../node_modules/rc-field-form/es/utils/messages.js","../node_modules/rc-util/es/utils/get.js","../node_modules/rc-util/es/utils/set.js","../node_modules/rc-field-form/es/utils/cloneDeep.js","../node_modules/rc-field-form/es/utils/valueUtil.js","../node_modules/rc-field-form/es/utils/validateUtil.js","../node_modules/rc-field-form/es/Field.js","../node_modules/rc-field-form/es/ListContext.js","../node_modules/rc-field-form/es/List.js","../node_modules/rc-field-form/es/utils/NameMap.js","../node_modules/rc-field-form/es/useForm.js","../node_modules/rc-field-form/es/utils/asyncUtil.js","../node_modules/rc-field-form/es/FormContext.js","../node_modules/rc-field-form/es/Form.js","../node_modules/rc-field-form/es/useWatch.js","../node_modules/rc-field-form/es/index.js","../../../src/util.ts","../../../src/rule/required.ts","../../../src/rule/url.ts","../../../src/rule/type.ts","../../../src/rule/index.ts","../../../src/rule/whitespace.ts","../../../src/rule/range.ts","../../../src/rule/enum.ts","../../../src/rule/pattern.ts","../../../src/validator/type.ts","../../../src/validator/index.ts","../../../src/validator/string.ts","../../../src/validator/method.ts","../../../src/validator/number.ts","../../../src/validator/boolean.ts","../../../src/validator/regexp.ts","../../../src/validator/integer.ts","../../../src/validator/float.ts","../../../src/validator/array.ts","../../../src/validator/object.ts","../../../src/validator/enum.ts","../../../src/validator/pattern.ts","../../../src/validator/date.ts","../../../src/validator/required.ts","../../../src/validator/any.ts","../../../src/messages.ts","../../../src/index.ts"],"names":["toArray","children","option","arguments","length","undefined","ret","React","Children","forEach","child","keepEmpty","Array","isArray","concat","isFragment","props","push","FormItemInputContext","_toArray","arr","HOOK_MARK","warningFunc","warning","Context","getFieldValue","getFieldsValue","getFieldError","getFieldWarning","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldValue","setFieldsValue","validateFields","submit","getInternalHooks","dispatch","initEntityValue","registerField","useSubscribe","setInitialValues","destroyForm","setCallbacks","registerWatch","getFields","setValidateMessages","setPreserve","getInitialValue","value","typeTemplate","defaultValidateMessages","default","required","enum","whitespace","date","format","parse","invalid","types","string","method","array","object","number","boolean","integer","float","regexp","email","url","hex","len","min","max","range","pattern","mismatch","get","entity","path","current","i","internalSet","paths","removeIfUndefined","clone","_paths","restPath","slice","_toConsumableArray","_objectSpread","set","cloneDeep","val","map","item","cloneArrayDeep","_typeof","Object","getPrototypeOf","prototype","res","key","cloneObjectDeep","getNamePath","getValue","store","namePath","setValue","newStore","cloneByNamePathList","namePathList","containsNamePath","some","matchNamePath","isObject","obj","internalSetValues","values","keys","prevValue","recursive","setValues","_len","restValues","_key","reduce","changedNamePath","every","nameUnit","defaultGetValueFromEvent","valuePropName","event","target","move","moveIndex","toIndex","diff","AsyncValidator","RawAsyncValidator","replaceMessage","template","kv","replace","str","validateRule","_x","_x2","_x3","_x4","_x5","_validateRule","apply","this","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","name","rule","options","messageVariables","cloneRule","originValidator","subRuleField","validator","messages","result","subResults","fillVariableResult","wrap","_context2","prev","next","ruleIndex","error","console","Promise","reject","type","defaultField","_defineProperty","validateMessages","resolve","validate","t0","errors","_ref4","index","message","mergedMessage","all","subValue","sent","abrupt","join","stop","validateRules","rules","validateFirst","summaryPromise","filledRules","currentRule","originValidatorFunc","callback","hasPromise","promise","args","then","catch","err","sort","_ref","_ref2","w1","warningOnly","i1","w2","i2","_ref3","_callee","_context","_x6","_x7","rulePromises","_x9","_finishOnFirstFailed","finishOnFirstFailed","_x8","_finishOnAllFailed","finishOnAllFailed","e","_callee3","_context3","errorsList","_ref5","_callee4","count","_context4","ruleError","_excluded","EMPTY_ERRORS","requireUpdate","shouldUpdate","nextValue","info","source","Field","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","resetCount","cancelRegisterFunc","mounted","touched","dirty","validatePromise","prevValidating","warnings","cancelRegister","_this$props","preserve","isListField","_this$props2","_fieldContext$prefixN","fieldContext","prefixName","getRules","_this$props3","_this$props3$rules","refresh","setState","triggerMetaEvent","destroy","onMetaChange","getMeta","onStoreChange","prevStore","_this$props4","_this$props4$dependen","dependencies","onReset","curValue","namePathMatch","reRender","data","validating","dependency","relatedFields","currentValue","rootPromise","_this$props5","_this$props5$validate","triggerName","filteredRules","filter","validateTrigger","includes","ruleErrors","_ruleErrors$forEach","nextErrors","nextWarnings","_ref3$errors","isFieldDirty","initialValue","getErrors","getWarnings","isList","isPreserve","getOnlyChild","meta","getControlled","isFunction","childList","toChildrenArray","childProps","_this$props6","trigger","getValueFromEvent","normalize","getValueProps","mergedValidateTrigger","_getInternalHooks","mergedGetValueProps","originTriggerFunc","control","newValue","validateTriggerList","originTrigger","_assertThisInitialized","_createClass","_this$props7","forceUpdate","returnChildNode","_this$getOnlyChild","contextType","FieldContext","defaultProps","WrapperField","restProps","_objectWithoutProperties","_extends","ListContext","List","context","keyManager","id","parentPrefixName","listContext","getKey","pathName","Provider","_ref3$value","onChange","getNewValue","operations","add","defaultValue","remove","indexSet","Set","size","_","keysIndex","has","valueIndex","from","to","_move","listValue","__","SPLIT","cell","NameMap","kvs","Map","updater","delete","entries","_slicedToArray","cells","split","_cell$match","match","_cell$match2","unit","Number","json","FormStore","forceRootUpdate","formHooked","subscribable","fieldEntities","initialValues","callbacks","lastValidatePromise","getForm","_init","prevWithoutPreserves","init","_this$prevWithoutPres","nextStore","updateStore","getFieldEntities","isMergedPreserve","initValue","watchList","fn","notifyWatch","timeoutId","warningUnhooked","process","pure","field","getFieldsMap","cache","getFieldEntitiesForNamePathList","nameList","INVALIDATE_NAME_PATH","filterFunc","filteredNameList","_entity$isListField","arg0","arg1","isAllFieldsTouched","shortNamePath","fieldNamePath","update","list","isNamePathListTouched","entities","namePathListEntities","testField","resetWithFieldInitialValue","records","requiredFieldEntities","resetWithFields","originValue","skipExist","_requiredFieldEntitie","r","notifyObservers","fields","fieldData","defineProperty","fieldPreserve","mergedPreserve","subNamePath","_prevStore","triggerDependenciesUpdate","action","updateValue","_namePath","mergedInfo","childrenFields","getDependencyChildrenFields","onValuesChange","triggerOnFieldsChange","rootNamePath","dependencies2fields","dependencyNamePath","fillChildren","filedErrors","onFieldsChange","fieldName","provideNameList","promiseList","mergedErrors","mergedWarnings","_ref6","hasError","results","allPromiseFinish","resultNamePathList","_ref7","returnPromise","errorList","errorFields","outOfDate","onFinish","onFinishFailed","useForm","form","formRef","_React$useState","formStore","FormContext","triggerFormChange","triggerFormFinish","registerForm","unregisterForm","FormProvider","onFormChange","onFormFinish","formContext","formsRef","changedFields","forms","newForms","Form","ref","_ref$component","component","Component","_ref$validateTrigger","_onFieldsChange","_onFinish","_useForm","formInstance","_formInstance$getInte","rest","childrenNode","mountRef","childrenRenderProps","prevFieldsRef","sourceKeys","targetKeys","sourceValue","targetValue","isSimilar","formContextValue","wrapperNode","onSubmit","preventDefault","stopPropagation","_restProps$onReset","stringify","JSON","Math","random","useWatch","_useState","useState","_useState2","valueStr","useMemo","valueStrRef","useRef","useContext","isValidForm","namePathRef","useEffect","nextValueStr","RefForm","FieldForm","formatRegExp","convertFieldsError","x","String","isEmptyValue","isNativeStringType","asyncSerialArray","func","arrLength","original","AsyncValidationError","asyncMap","pending","objArr","k","flattenObjArr","firstFields","objArrKeys","objArrLength","total","a","asyncParallelArray","complementError","fieldValue","v","oe","fullField","deepMerge","parseInt","RegExp","isNaN","urlReg","b","v4","v6seg","v6","v46Exact","v4exact","v6exact","ip","ipv4","ipv6","protocol","getUrlRegex","test","ruleType","custom","num","_pattern","dateObject","Date","any","newMessages","cloned","Schema","_messages","defaultMessages","define","descriptor","Error","o","oc","series","z","deep","addFullField","fullFields","cb","filledErrors","doIt","fieldsSchema","paredFieldsSchema","fieldSchema","fieldSchemaList","schema","errs","finalErrors","setTimeout","complete","getType","validators","getValidationMethod","messageIndex","register"],"mappings":"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","file":"static/js/3.b067fbf0.chunk.js","sourcesContent":["import React from 'react';\nimport { isFragment } from 'react-is';\nexport default function toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  React.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if (isFragment(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nexport var FormContext = /*#__PURE__*/React.createContext({\n  labelAlign: 'right',\n  vertical: false,\n  itemRef: function itemRef() {}\n});\nexport var NoStyleItemContext = /*#__PURE__*/React.createContext(null);\nexport var FormProvider = function FormProvider(props) {\n  var providerProps = omit(props, ['prefixCls']);\n  return /*#__PURE__*/React.createElement(RcFormProvider, _extends({}, providerProps));\n};\nexport var FormItemPrefixContext = /*#__PURE__*/React.createContext({\n  prefixCls: ''\n});\nexport var FormItemInputContext = /*#__PURE__*/React.createContext({});\nexport var NoFormStyle = function NoFormStyle(_ref) {\n  var children = _ref.children,\n      status = _ref.status,\n      override = _ref.override;\n  var formItemInputContext = useContext(FormItemInputContext);\n  var newFormItemInputContext = useMemo(function () {\n    var newContext = _extends({}, formItemInputContext);\n\n    if (override) {\n      delete newContext.isFormItemInput;\n    }\n\n    if (status) {\n      delete newContext.status;\n      delete newContext.hasFeedback;\n      delete newContext.feedbackIcon;\n    }\n\n    return newContext;\n  }, [status, override, formItemInputContext]);\n  return /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: newFormItemInputContext\n  }, children);\n};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nexport var HOOK_MARK = 'RC_FORM_INTERNAL_HOOKS'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar warningFunc = function warningFunc() {\n  warning(false, 'Can not find FormContext. Please make sure you wrap Field under Form.');\n};\n\nvar Context = /*#__PURE__*/React.createContext({\n  getFieldValue: warningFunc,\n  getFieldsValue: warningFunc,\n  getFieldError: warningFunc,\n  getFieldWarning: warningFunc,\n  getFieldsError: warningFunc,\n  isFieldsTouched: warningFunc,\n  isFieldTouched: warningFunc,\n  isFieldValidating: warningFunc,\n  isFieldsValidating: warningFunc,\n  resetFields: warningFunc,\n  setFields: warningFunc,\n  setFieldValue: warningFunc,\n  setFieldsValue: warningFunc,\n  validateFields: warningFunc,\n  submit: warningFunc,\n  getInternalHooks: function getInternalHooks() {\n    warningFunc();\n    return {\n      dispatch: warningFunc,\n      initEntityValue: warningFunc,\n      registerField: warningFunc,\n      useSubscribe: warningFunc,\n      setInitialValues: warningFunc,\n      destroyForm: warningFunc,\n      setCallbacks: warningFunc,\n      registerWatch: warningFunc,\n      getFields: warningFunc,\n      setValidateMessages: warningFunc,\n      setPreserve: warningFunc,\n      getInitialValue: warningFunc\n    };\n  }\n});\nexport default Context;","export function toArray(value) {\n  if (value === undefined || value === null) {\n    return [];\n  }\n\n  return Array.isArray(value) ? value : [value];\n}","var typeTemplate = \"'${name}' is not a valid ${type}\";\nexport var defaultValidateMessages = {\n  default: \"Validation error on field '${name}'\",\n  required: \"'${name}' is required\",\n  enum: \"'${name}' must be one of [${enum}]\",\n  whitespace: \"'${name}' cannot be empty\",\n  date: {\n    format: \"'${name}' is invalid for format date\",\n    parse: \"'${name}' could not be parsed as date\",\n    invalid: \"'${name}' is invalid date\"\n  },\n  types: {\n    string: typeTemplate,\n    method: typeTemplate,\n    array: typeTemplate,\n    object: typeTemplate,\n    number: typeTemplate,\n    date: typeTemplate,\n    boolean: typeTemplate,\n    integer: typeTemplate,\n    float: typeTemplate,\n    regexp: typeTemplate,\n    email: typeTemplate,\n    url: typeTemplate,\n    hex: typeTemplate\n  },\n  string: {\n    len: \"'${name}' must be exactly ${len} characters\",\n    min: \"'${name}' must be at least ${min} characters\",\n    max: \"'${name}' cannot be longer than ${max} characters\",\n    range: \"'${name}' must be between ${min} and ${max} characters\"\n  },\n  number: {\n    len: \"'${name}' must equal ${len}\",\n    min: \"'${name}' cannot be less than ${min}\",\n    max: \"'${name}' cannot be greater than ${max}\",\n    range: \"'${name}' must be between ${min} and ${max}\"\n  },\n  array: {\n    len: \"'${name}' must be exactly ${len} in length\",\n    min: \"'${name}' cannot be less than ${min} in length\",\n    max: \"'${name}' cannot be greater than ${max} in length\",\n    range: \"'${name}' must be between ${min} and ${max} in length\"\n  },\n  pattern: {\n    mismatch: \"'${name}' does not match pattern ${pattern}\"\n  }\n};","export default function get(entity, path) {\n  var current = entity;\n\n  for (var i = 0; i < path.length; i += 1) {\n    if (current === null || current === undefined) {\n      return undefined;\n    }\n\n    current = current[path[i]];\n  }\n\n  return current;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport get from './get';\n\nfunction internalSet(entity, paths, value, removeIfUndefined) {\n  if (!paths.length) {\n    return value;\n  }\n\n  var _paths = _toArray(paths),\n      path = _paths[0],\n      restPath = _paths.slice(1);\n\n  var clone;\n\n  if (!entity && typeof path === 'number') {\n    clone = [];\n  } else if (Array.isArray(entity)) {\n    clone = _toConsumableArray(entity);\n  } else {\n    clone = _objectSpread({}, entity);\n  } // Delete prop if `removeIfUndefined` and value is undefined\n\n\n  if (removeIfUndefined && value === undefined && restPath.length === 1) {\n    delete clone[path][restPath[0]];\n  } else {\n    clone[path] = internalSet(clone[path], restPath, value, removeIfUndefined);\n  }\n\n  return clone;\n}\n\nexport default function set(entity, paths, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // Do nothing if `removeIfUndefined` and parent object not exist\n  if (paths.length && removeIfUndefined && value === undefined && !get(entity, paths.slice(0, -1))) {\n    return entity;\n  }\n\n  return internalSet(entity, paths, value, removeIfUndefined);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nfunction cloneDeep(val) {\n  if (Array.isArray(val)) {\n    return cloneArrayDeep(val);\n  } else if (_typeof(val) === 'object' && val !== null) {\n    return cloneObjectDeep(val);\n  }\n\n  return val;\n}\n\nfunction cloneObjectDeep(val) {\n  if (Object.getPrototypeOf(val) === Object.prototype) {\n    var res = {};\n\n    for (var key in val) {\n      res[key] = cloneDeep(val[key]);\n    }\n\n    return res;\n  }\n\n  return val;\n}\n\nfunction cloneArrayDeep(val) {\n  return val.map(function (item) {\n    return cloneDeep(item);\n  });\n}\n\nexport default cloneDeep;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { toArray } from './typeUtil';\nimport cloneDeep from '../utils/cloneDeep';\n/**\n * Convert name to internal supported format.\n * This function should keep since we still thinking if need support like `a.b.c` format.\n * 'a' => ['a']\n * 123 => [123]\n * ['a', 123] => ['a', 123]\n */\n\nexport function getNamePath(path) {\n  return toArray(path);\n}\nexport function getValue(store, namePath) {\n  var value = get(store, namePath);\n  return value;\n}\nexport function setValue(store, namePath, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var newStore = set(store, namePath, value, removeIfUndefined);\n  return newStore;\n}\nexport function cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = getValue(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nexport function containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(path, namePath);\n  });\n}\n\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\n/**\n * Copy values into store and return a new values object\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\n */\n\n\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread({}, store);\n\n  if (!values) {\n    return newStore;\n  }\n\n  Object.keys(values).forEach(function (key) {\n    var prevValue = newStore[key];\n    var value = values[key]; // If both are object (but target is not array), we use recursion to set deep value\n\n    var recursive = isObject(prevValue) && isObject(value);\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : cloneDeep(value); // Clone deep for arrays\n  });\n  return newStore;\n}\n\nexport function setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n\n  return restValues.reduce(function (current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nexport function matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n\n  return namePath.every(function (nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}\nexport function isSimilar(source, target) {\n  if (source === target) {\n    return true;\n  }\n\n  if (!source && target || source && !target) {\n    return false;\n  }\n\n  if (!source || !target || _typeof(source) !== 'object' || _typeof(target) !== 'object') {\n    return false;\n  }\n\n  var sourceKeys = Object.keys(source);\n  var targetKeys = Object.keys(target);\n  var keys = new Set([].concat(sourceKeys, targetKeys));\n  return _toConsumableArray(keys).every(function (key) {\n    var sourceValue = source[key];\n    var targetValue = target[key];\n\n    if (typeof sourceValue === 'function' && typeof targetValue === 'function') {\n      return true;\n    }\n\n    return sourceValue === targetValue;\n  });\n}\nexport function defaultGetValueFromEvent(valuePropName) {\n  var event = arguments.length <= 1 ? undefined : arguments[1];\n\n  if (event && event.target && _typeof(event.target) === 'object' && valuePropName in event.target) {\n    return event.target[valuePropName];\n  }\n\n  return event;\n}\n/**\n * Moves an array item from one position in an array to another.\n *\n * Note: This is a pure function so a new array will be returned, instead\n * of altering the array argument.\n *\n * @param array         Array in which to move an item.         (required)\n * @param moveIndex     The index of the item to move.          (required)\n * @param toIndex       The index to move item at moveIndex to. (required)\n */\n\nexport function move(array, moveIndex, toIndex) {\n  var length = array.length;\n\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\n    return array;\n  }\n\n  var item = array[moveIndex];\n  var diff = moveIndex - toIndex;\n\n  if (diff > 0) {\n    // move left\n    return [].concat(_toConsumableArray(array.slice(0, toIndex)), [item], _toConsumableArray(array.slice(toIndex, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, length)));\n  }\n\n  if (diff < 0) {\n    // move right\n    return [].concat(_toConsumableArray(array.slice(0, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array.slice(toIndex + 1, length)));\n  }\n\n  return array;\n}","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/esm/regeneratorRuntime\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport RawAsyncValidator from 'async-validator';\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { defaultValidateMessages } from './messages';\nimport { setValues } from './valueUtil'; // Remove incorrect original ts define\n\nvar AsyncValidator = RawAsyncValidator;\n/**\n * Replace with template.\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\n */\n\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\n    var key = str.slice(2, -1);\n    return kv[key];\n  });\n}\n\nvar CODE_LOGIC_ERROR = 'CODE_LOGIC_ERROR';\n\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\n/**\n * We use `async-validator` to validate the value.\n * But only check one value in a time to avoid namePath validate issue.\n */\n\n\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name, value, rule, options, messageVariables) {\n    var cloneRule, originValidator, subRuleField, validator, messages, result, subResults, kv, fillVariableResult;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cloneRule = _objectSpread({}, rule); // Bug of `async-validator`\n            // https://github.com/react-component/field-form/issues/316\n            // https://github.com/react-component/field-form/issues/313\n\n            delete cloneRule.ruleIndex;\n\n            if (cloneRule.validator) {\n              originValidator = cloneRule.validator;\n\n              cloneRule.validator = function () {\n                try {\n                  return originValidator.apply(void 0, arguments);\n                } catch (error) {\n                  console.error(error);\n                  return Promise.reject(CODE_LOGIC_ERROR);\n                }\n              };\n            } // We should special handle array validate\n\n\n            subRuleField = null;\n\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\n            messages = setValues({}, defaultValidateMessages, options.validateMessages);\n            validator.messages(messages);\n            result = [];\n            _context2.prev = 9;\n            _context2.next = 12;\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\n\n          case 12:\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](9);\n\n            if (_context2.t0.errors) {\n              result = _context2.t0.errors.map(function (_ref4, index) {\n                var message = _ref4.message;\n                var mergedMessage = message === CODE_LOGIC_ERROR ? messages.default : message;\n                return /*#__PURE__*/React.isValidElement(mergedMessage) ?\n                /*#__PURE__*/\n                // Wrap ReactNode with `key`\n                React.cloneElement(mergedMessage, {\n                  key: \"error_\".concat(index)\n                }) : mergedMessage;\n              });\n            }\n\n          case 17:\n            if (!(!result.length && subRuleField)) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 20;\n            return Promise.all(value.map(function (subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n\n          case 20:\n            subResults = _context2.sent;\n            return _context2.abrupt(\"return\", subResults.reduce(function (prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n\n          case 22:\n            // Replace message with variables\n            kv = _objectSpread(_objectSpread({}, rule), {}, {\n              name: name,\n              enum: (rule.enum || []).join(', ')\n            }, messageVariables);\n            fillVariableResult = result.map(function (error) {\n              if (typeof error === 'string') {\n                return replaceMessage(error, kv);\n              }\n\n              return error;\n            });\n            return _context2.abrupt(\"return\", fillVariableResult);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[9, 14]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\n\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\n  var name = namePath.join('.'); // Fill rule with context\n\n  var filledRules = rules.map(function (currentRule, ruleIndex) {\n    var originValidatorFunc = currentRule.validator;\n\n    var cloneRule = _objectSpread(_objectSpread({}, currentRule), {}, {\n      ruleIndex: ruleIndex\n    }); // Replace validator if needed\n\n\n    if (originValidatorFunc) {\n      cloneRule.validator = function (rule, val, callback) {\n        var hasPromise = false; // Wrap callback only accept when promise not provided\n\n        var wrappedCallback = function wrappedCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          // Wait a tick to make sure return type is a promise\n          Promise.resolve().then(function () {\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\n\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        }; // Get promise\n\n\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n        /**\n         * 1. Use promise as the first priority.\n         * 2. If promise not exist, use callback with warning instead\n         */\n\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\n\n        if (hasPromise) {\n          promise.then(function () {\n            callback();\n          }).catch(function (err) {\n            callback(err || ' ');\n          });\n        }\n      };\n    }\n\n    return cloneRule;\n  }).sort(function (_ref, _ref2) {\n    var w1 = _ref.warningOnly,\n        i1 = _ref.ruleIndex;\n    var w2 = _ref2.warningOnly,\n        i2 = _ref2.ruleIndex;\n\n    if (!!w1 === !!w2) {\n      // Let keep origin order\n      return i1 - i2;\n    }\n\n    if (w1) {\n      return 1;\n    }\n\n    return -1;\n  }); // Do validate rules\n\n  var summaryPromise;\n\n  if (validateFirst === true) {\n    // >>>>> Validate by serialization\n    summaryPromise = new Promise( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve, reject) {\n        var i, rule, errors;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < filledRules.length)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                rule = filledRules[i];\n                _context.next = 5;\n                return validateRule(name, value, rule, options, messageVariables);\n\n              case 5:\n                errors = _context.sent;\n\n                if (!errors.length) {\n                  _context.next = 9;\n                  break;\n                }\n\n                reject([{\n                  errors: errors,\n                  rule: rule\n                }]);\n                return _context.abrupt(\"return\");\n\n              case 9:\n                i += 1;\n                _context.next = 1;\n                break;\n\n              case 12:\n                /* eslint-enable */\n                resolve([]);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } else {\n    // >>>>> Validate by parallel\n    var rulePromises = filledRules.map(function (rule) {\n      return validateRule(name, value, rule, options, messageVariables).then(function (errors) {\n        return {\n          errors: errors,\n          rule: rule\n        };\n      });\n    });\n    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\n      // Always change to rejection for Field to catch\n      return Promise.reject(errors);\n    });\n  } // Internal catch error to avoid console error log.\n\n\n  summaryPromise.catch(function (e) {\n    return e;\n  });\n  return summaryPromise;\n}\n\nfunction finishOnAllFailed(_x8) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(rulePromises) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\n              var _ref5;\n\n              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));\n\n              return errors;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction finishOnFirstFailed(_x9) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\n\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(rulePromises) {\n    var count;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            count = 0;\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              rulePromises.forEach(function (promise) {\n                promise.then(function (ruleError) {\n                  if (ruleError.errors.length) {\n                    resolve([ruleError]);\n                  }\n\n                  count += 1;\n\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"name\"];\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\nvar EMPTY_ERRORS = [];\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field);\n\n  /**\n   * Follow state should not management in State since it will async update by React.\n   * This makes first render of form can not get correct state value.\n   */\n\n  /**\n   * Mark when touched & validated. Currently only used for `dependencies`.\n   * Note that we do not think field with `initialValue` is dirty\n   * but this will be by `isFieldDirty` func.\n   */\n  // ============================== Subscriptions ==============================\n  function Field(props) {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.call(this, props); // Register on init\n\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    _this.touched = false;\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.prevValidating = void 0;\n    _this.errors = EMPTY_ERRORS;\n    _this.warnings = EMPTY_ERRORS;\n\n    _this.cancelRegister = function () {\n      var _this$props = _this.props,\n          preserve = _this$props.preserve,\n          isListField = _this$props.isListField,\n          name = _this$props.name;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n\n      _this.cancelRegisterFunc = null;\n    };\n\n    _this.getNamePath = function () {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props3 = _this.props,\n          _this$props3$rules = _this$props3.rules,\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n          fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (!_this.mounted) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    };\n\n    _this.triggerMetaEvent = function (destroy) {\n      var onMetaChange = _this.props.onMetaChange;\n      onMetaChange === null || onMetaChange === void 0 ? void 0 : onMetaChange(_objectSpread(_objectSpread({}, _this.getMeta()), {}, {\n        destroy: destroy\n      }));\n    };\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n          shouldUpdate = _this$props4.shouldUpdate,\n          _this$props4$dependen = _this$props4.dependencies,\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n          onReset = _this$props4.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = EMPTY_ERRORS;\n        _this.warnings = EMPTY_ERRORS;\n\n        _this.triggerMetaEvent();\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = EMPTY_ERRORS;\n            _this.warnings = EMPTY_ERRORS;\n\n            _this.triggerMetaEvent();\n\n            onReset === null || onReset === void 0 ? void 0 : onReset();\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        /**\n         * In case field with `preserve = false` nest deps like:\n         * - A = 1 => show B\n         * - B = 1 => show C\n         * - Reset A, need clean B, C\n         */\n\n        case 'remove':\n          {\n            if (shouldUpdate) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || EMPTY_ERRORS;\n              }\n\n              if ('warnings' in data) {\n                _this.warnings = data.warnings || EMPTY_ERRORS;\n              }\n\n              _this.dirty = true;\n\n              _this.triggerMetaEvent();\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\n\n\n      var rootPromise = Promise.resolve().then(function () {\n        if (!_this.mounted) {\n          return [];\n        }\n\n        var _this$props5 = _this.props,\n            _this$props5$validate = _this$props5.validateFirst,\n            validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\n            messageVariables = _this$props5.messageVariables;\n\n        var _ref2 = options || {},\n            triggerName = _ref2.triggerName;\n\n        var filteredRules = _this.getRules();\n\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function (rule) {\n            var validateTrigger = rule.validateTrigger;\n\n            if (!validateTrigger) {\n              return true;\n            }\n\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function (e) {\n          return e;\n        }).then(function () {\n          var ruleErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_ERRORS;\n\n          if (_this.validatePromise === rootPromise) {\n            var _ruleErrors$forEach;\n\n            _this.validatePromise = null; // Get errors & warnings\n\n            var nextErrors = [];\n            var nextWarnings = [];\n            (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 ? void 0 : _ruleErrors$forEach.call(ruleErrors, function (_ref3) {\n              var warningOnly = _ref3.rule.warningOnly,\n                  _ref3$errors = _ref3.errors,\n                  errors = _ref3$errors === void 0 ? EMPTY_ERRORS : _ref3$errors;\n\n              if (warningOnly) {\n                nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));\n              } else {\n                nextErrors.push.apply(nextErrors, _toConsumableArray(errors));\n              }\n            });\n            _this.errors = nextErrors;\n            _this.warnings = nextWarnings;\n\n            _this.triggerMetaEvent();\n\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = EMPTY_ERRORS;\n      _this.warnings = EMPTY_ERRORS;\n\n      _this.triggerMetaEvent(); // Force trigger re-render since we need sync renderProps with new meta\n\n\n      _this.reRender();\n\n      return rootPromise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      // Touched or validate or has initialValue\n      if (_this.dirty || _this.props.initialValue !== undefined) {\n        return true;\n      } // Form set initialValue\n\n\n      var fieldContext = _this.props.fieldContext;\n\n      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK),\n          getInitialValue = _fieldContext$getInte.getInitialValue;\n\n      if (getInitialValue(_this.getNamePath()) !== undefined) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    };\n\n    _this.getWarnings = function () {\n      return _this.warnings;\n    };\n\n    _this.isListField = function () {\n      return _this.props.isListField;\n    };\n\n    _this.isList = function () {\n      return _this.props.isList;\n    };\n\n    _this.isPreserve = function () {\n      return _this.props.preserve;\n    };\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        warnings: _this.warnings,\n        name: _this.getNamePath()\n      };\n      return meta;\n    };\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    };\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          validateTrigger = _this$props6.validateTrigger,\n          getValueFromEvent = _this$props6.getValueFromEvent,\n          normalize = _this$props6.normalize,\n          valuePropName = _this$props6.valuePropName,\n          getValueProps = _this$props6.getValueProps,\n          fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var getInternalHooks = fieldContext.getInternalHooks,\n          getFieldsValue = fieldContext.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n\n        _this.triggerMetaEvent();\n\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          initEntityValue = _getInternalHooks2.initEntityValue;\n\n      initEntityValue(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          shouldUpdate = _this$props7.shouldUpdate,\n          fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n            registerField = _getInternalHooks3.registerField;\n\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.triggerMetaEvent(true);\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nfunction WrapperField(_ref5) {\n  var name = _ref5.name,\n      restProps = _objectWithoutProperties(_ref5, _excluded);\n\n  var fieldContext = React.useContext(FieldContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\n\nexport default WrapperField;","import * as React from 'react';\nvar ListContext = /*#__PURE__*/React.createContext(null);\nexport default ListContext;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport FieldContext from './FieldContext';\nimport Field from './Field';\nimport { move as _move, getNamePath } from './utils/valueUtil';\nimport ListContext from './ListContext';\n\nvar List = function List(_ref) {\n  var name = _ref.name,\n      initialValue = _ref.initialValue,\n      children = _ref.children,\n      rules = _ref.rules,\n      validateTrigger = _ref.validateTrigger;\n  var context = React.useContext(FieldContext);\n  var keyRef = React.useRef({\n    keys: [],\n    id: 0\n  });\n  var keyManager = keyRef.current;\n  var prefixName = React.useMemo(function () {\n    var parentPrefixName = getNamePath(context.prefixName) || [];\n    return [].concat(_toConsumableArray(parentPrefixName), _toConsumableArray(getNamePath(name)));\n  }, [context.prefixName, name]);\n  var fieldContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, context), {}, {\n      prefixName: prefixName\n    });\n  }, [context, prefixName]); // List context\n\n  var listContext = React.useMemo(function () {\n    return {\n      getKey: function getKey(namePath) {\n        var len = prefixName.length;\n        var pathName = namePath[len];\n        return [keyManager.keys[pathName], namePath.slice(len + 1)];\n      }\n    };\n  }, [prefixName]); // User should not pass `children` as other type.\n\n  if (typeof children !== 'function') {\n    warning(false, 'Form.List only accepts function as children.');\n    return null;\n  }\n\n  var shouldUpdate = function shouldUpdate(prevValue, nextValue, _ref2) {\n    var source = _ref2.source;\n\n    if (source === 'internal') {\n      return false;\n    }\n\n    return prevValue !== nextValue;\n  };\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: listContext\n  }, /*#__PURE__*/React.createElement(FieldContext.Provider, {\n    value: fieldContext\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: [],\n    shouldUpdate: shouldUpdate,\n    rules: rules,\n    validateTrigger: validateTrigger,\n    initialValue: initialValue,\n    isList: true\n  }, function (_ref3, meta) {\n    var _ref3$value = _ref3.value,\n        value = _ref3$value === void 0 ? [] : _ref3$value,\n        onChange = _ref3.onChange;\n    var getFieldValue = context.getFieldValue;\n\n    var getNewValue = function getNewValue() {\n      var values = getFieldValue(prefixName || []);\n      return values || [];\n    };\n    /**\n     * Always get latest value in case user update fields by `form` api.\n     */\n\n\n    var operations = {\n      add: function add(defaultValue, index) {\n        // Mapping keys\n        var newValue = getNewValue();\n\n        if (index >= 0 && index <= newValue.length) {\n          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys.slice(0, index)), [keyManager.id], _toConsumableArray(keyManager.keys.slice(index)));\n          onChange([].concat(_toConsumableArray(newValue.slice(0, index)), [defaultValue], _toConsumableArray(newValue.slice(index))));\n        } else {\n          if (process.env.NODE_ENV !== 'production' && (index < 0 || index > newValue.length)) {\n            warning(false, 'The second parameter of the add function should be a valid positive number.');\n          }\n\n          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys), [keyManager.id]);\n          onChange([].concat(_toConsumableArray(newValue), [defaultValue]));\n        }\n\n        keyManager.id += 1;\n      },\n      remove: function remove(index) {\n        var newValue = getNewValue();\n        var indexSet = new Set(Array.isArray(index) ? index : [index]);\n\n        if (indexSet.size <= 0) {\n          return;\n        }\n\n        keyManager.keys = keyManager.keys.filter(function (_, keysIndex) {\n          return !indexSet.has(keysIndex);\n        }); // Trigger store change\n\n        onChange(newValue.filter(function (_, valueIndex) {\n          return !indexSet.has(valueIndex);\n        }));\n      },\n      move: function move(from, to) {\n        if (from === to) {\n          return;\n        }\n\n        var newValue = getNewValue(); // Do not handle out of range\n\n        if (from < 0 || from >= newValue.length || to < 0 || to >= newValue.length) {\n          return;\n        }\n\n        keyManager.keys = _move(keyManager.keys, from, to); // Trigger store change\n\n        onChange(_move(newValue, from, to));\n      }\n    };\n    var listValue = value || [];\n\n    if (!Array.isArray(listValue)) {\n      listValue = [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(false, \"Current value of '\".concat(prefixName.join(' > '), \"' is not an array type.\"));\n      }\n    }\n\n    return children(listValue.map(function (__, index) {\n      var key = keyManager.keys[index];\n\n      if (key === undefined) {\n        keyManager.keys[index] = keyManager.id;\n        key = keyManager.keys[index];\n        keyManager.id += 1;\n      }\n\n      return {\n        name: index,\n        key: key,\n        isListField: true\n      };\n    }), operations, meta);\n  })));\n};\n\nexport default List;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar SPLIT = '__@field_split__';\n/**\n * Convert name path into string to fast the fetch speed of Map.\n */\n\nfunction normalize(namePath) {\n  return namePath.map(function (cell) {\n    return \"\".concat(_typeof(cell), \":\").concat(cell);\n  }) // Magic split\n  .join(SPLIT);\n}\n/**\n * NameMap like a `Map` but accepts `string[]` as key.\n */\n\n\nvar NameMap = /*#__PURE__*/function () {\n  function NameMap() {\n    _classCallCheck(this, NameMap);\n\n    this.kvs = new Map();\n  }\n\n  _createClass(NameMap, [{\n    key: \"set\",\n    value: function set(key, value) {\n      this.kvs.set(normalize(key), value);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.kvs.get(normalize(key));\n    }\n  }, {\n    key: \"update\",\n    value: function update(key, updater) {\n      var origin = this.get(key);\n      var next = updater(origin);\n\n      if (!next) {\n        this.delete(key);\n      } else {\n        this.set(key, next);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      this.kvs.delete(normalize(key));\n    } // Since we only use this in test, let simply realize this\n\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      return _toConsumableArray(this.kvs.entries()).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        var cells = key.split(SPLIT);\n        return callback({\n          key: cells.map(function (cell) {\n            var _cell$match = cell.match(/^([^:]*):(.*)$/),\n                _cell$match2 = _slicedToArray(_cell$match, 3),\n                type = _cell$match2[1],\n                unit = _cell$match2[2];\n\n            return type === 'number' ? Number(unit) : unit;\n          }),\n          value: value\n        });\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = {};\n      this.map(function (_ref3) {\n        var key = _ref3.key,\n            value = _ref3.value;\n        json[key.join('.')] = value;\n        return null;\n      });\n      return json;\n    }\n  }]);\n\n  return NameMap;\n}();\n\nexport default NameMap;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport cloneDeep from './utils/cloneDeep';\nimport { defaultValidateMessages } from './utils/messages';\nimport NameMap from './utils/NameMap';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldValue: _this.setFieldValue,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.prevWithoutPreserves = null;\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      var _this$prevWithoutPres;\n\n      var nextStore = setValues({}, initialValues, _this.store); // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 ? void 0 : _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n\n      _this.updateStore(nextStore);\n    }\n  };\n\n  this.destroyForm = function () {\n    var prevWithoutPreserves = new NameMap();\n\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!_this.isMergedPreserve(entity.isPreserve())) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  };\n\n  this.getInitialValue = function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath); // Not cloneDeep when without `namePath`\n\n    return namePath.length ? cloneDeep(initValue) : initValue;\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.watchList = [];\n\n  this.registerWatch = function (callback) {\n    _this.watchList.push(callback);\n\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  };\n\n  this.notifyWatch = function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // No need to cost perf when nothing need to watch\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n\n      _this.watchList.forEach(function (callback) {\n        callback(values, namePath);\n      });\n    }\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.updateStore = function (nextStore) {\n    _this.store = nextStore;\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.updateStore(setValues({}, _this.initialValues));\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      _this.notifyWatch();\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name);\n      namePathList.push(namePath); // Value\n\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  };\n\n  this.isMergedPreserve = function (fieldPreserve) {\n    var mergedPreserve = fieldPreserve !== undefined ? fieldPreserve : _this.preserve;\n    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    var namePath = entity.getNamePath();\n\n    _this.notifyWatch([namePath]); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      if (!_this.isMergedPreserve(preserve) && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true)); // Notify that field is unmount\n\n\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          }); // Dependencies update\n\n\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n\n      _this.notifyWatch([namePath]);\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref3) {\n        var onStoreChange = _ref3.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.triggerDependenciesUpdate = function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n\n    return childrenFields;\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n\n    _this.updateStore(setValue(_this.store, namePath, value));\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n\n    _this.notifyWatch([namePath]); // Dependencies update\n\n\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      var nextStore = setValues(_this.store, store);\n\n      _this.updateStore(nextStore);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n\n    _this.notifyWatch();\n  };\n\n  this.setFieldValue = function (name, value) {\n    _this.setFields([{\n      name: name,\n      value: value\n    }]);\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref4) {\n          var name = _ref4.name,\n              errors = _ref4.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref5) {\n        var fieldName = _ref5.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var _ruleErrors$forEach;\n\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 ? void 0 : _ruleErrors$forEach.call(ruleErrors, function (_ref6) {\n            var warningOnly = _ref6.rule.warningOnly,\n                errors = _ref6.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref7) {\n        var name = _ref7.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n});\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","export function allPromiseFinish(promiseList) {\n  var hasError = false;\n  var count = promiseList.length;\n  var results = [];\n\n  if (!promiseList.length) {\n    return Promise.resolve([]);\n  }\n\n  return new Promise(function (resolve, reject) {\n    promiseList.forEach(function (promise, index) {\n      promise.catch(function (e) {\n        hasError = true;\n        return e;\n      }).then(function (result) {\n        count -= 1;\n        results[index] = result;\n\n        if (count > 0) {\n          return;\n        }\n\n        if (hasError) {\n          reject(results);\n        }\n\n        resolve(results);\n      });\n    });\n  });\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nvar FormContext = /*#__PURE__*/React.createContext({\n  triggerFormChange: function triggerFormChange() {},\n  triggerFormFinish: function triggerFormFinish() {},\n  registerForm: function registerForm() {},\n  unregisterForm: function unregisterForm() {}\n});\n\nvar FormProvider = function FormProvider(_ref) {\n  var validateMessages = _ref.validateMessages,\n      onFormChange = _ref.onFormChange,\n      onFormFinish = _ref.onFormFinish,\n      children = _ref.children;\n  var formContext = React.useContext(FormContext);\n  var formsRef = React.useRef({});\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: _objectSpread(_objectSpread({}, formContext), {}, {\n      validateMessages: _objectSpread(_objectSpread({}, formContext.validateMessages), validateMessages),\n      // =========================================================\n      // =                  Global Form Control                  =\n      // =========================================================\n      triggerFormChange: function triggerFormChange(name, changedFields) {\n        if (onFormChange) {\n          onFormChange(name, {\n            changedFields: changedFields,\n            forms: formsRef.current\n          });\n        }\n\n        formContext.triggerFormChange(name, changedFields);\n      },\n      triggerFormFinish: function triggerFormFinish(name, values) {\n        if (onFormFinish) {\n          onFormFinish(name, {\n            values: values,\n            forms: formsRef.current\n          });\n        }\n\n        formContext.triggerFormFinish(name, values);\n      },\n      registerForm: function registerForm(name, form) {\n        if (name) {\n          formsRef.current = _objectSpread(_objectSpread({}, formsRef.current), {}, _defineProperty({}, name, form));\n        }\n\n        formContext.registerForm(name, form);\n      },\n      unregisterForm: function unregisterForm(name) {\n        var newForms = _objectSpread({}, formsRef.current);\n\n        delete newForms[name];\n        formsRef.current = newForms;\n        formContext.unregisterForm(name);\n      }\n    })\n  }, children);\n};\n\nexport { FormProvider };\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"initialValues\", \"fields\", \"form\", \"preserve\", \"children\", \"component\", \"validateMessages\", \"validateTrigger\", \"onValuesChange\", \"onFieldsChange\", \"onFinish\", \"onFinishFailed\"];\nimport * as React from 'react';\nimport useForm from './useForm';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport FormContext from './FormContext';\nimport { isSimilar } from './utils/valueUtil';\n\nvar Form = function Form(_ref, ref) {\n  var name = _ref.name,\n      initialValues = _ref.initialValues,\n      fields = _ref.fields,\n      form = _ref.form,\n      preserve = _ref.preserve,\n      children = _ref.children,\n      _ref$component = _ref.component,\n      Component = _ref$component === void 0 ? 'form' : _ref$component,\n      validateMessages = _ref.validateMessages,\n      _ref$validateTrigger = _ref.validateTrigger,\n      validateTrigger = _ref$validateTrigger === void 0 ? 'onChange' : _ref$validateTrigger,\n      onValuesChange = _ref.onValuesChange,\n      _onFieldsChange = _ref.onFieldsChange,\n      _onFinish = _ref.onFinish,\n      onFinishFailed = _ref.onFinishFailed,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var formContext = React.useContext(FormContext); // We customize handle event since Context will makes all the consumer re-render:\n  // https://reactjs.org/docs/context.html#contextprovider\n\n  var _useForm = useForm(form),\n      _useForm2 = _slicedToArray(_useForm, 1),\n      formInstance = _useForm2[0];\n\n  var _formInstance$getInte = formInstance.getInternalHooks(HOOK_MARK),\n      useSubscribe = _formInstance$getInte.useSubscribe,\n      setInitialValues = _formInstance$getInte.setInitialValues,\n      setCallbacks = _formInstance$getInte.setCallbacks,\n      setValidateMessages = _formInstance$getInte.setValidateMessages,\n      setPreserve = _formInstance$getInte.setPreserve,\n      destroyForm = _formInstance$getInte.destroyForm; // Pass ref with form instance\n\n\n  React.useImperativeHandle(ref, function () {\n    return formInstance;\n  }); // Register form into Context\n\n  React.useEffect(function () {\n    formContext.registerForm(name, formInstance);\n    return function () {\n      formContext.unregisterForm(name);\n    };\n  }, [formContext, formInstance, name]); // Pass props to store\n\n  setValidateMessages(_objectSpread(_objectSpread({}, formContext.validateMessages), validateMessages));\n  setCallbacks({\n    onValuesChange: onValuesChange,\n    onFieldsChange: function onFieldsChange(changedFields) {\n      formContext.triggerFormChange(name, changedFields);\n\n      if (_onFieldsChange) {\n        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          rest[_key - 1] = arguments[_key];\n        }\n\n        _onFieldsChange.apply(void 0, [changedFields].concat(rest));\n      }\n    },\n    onFinish: function onFinish(values) {\n      formContext.triggerFormFinish(name, values);\n\n      if (_onFinish) {\n        _onFinish(values);\n      }\n    },\n    onFinishFailed: onFinishFailed\n  });\n  setPreserve(preserve); // Set initial value, init store value when first mount\n\n  var mountRef = React.useRef(null);\n  setInitialValues(initialValues, !mountRef.current);\n\n  if (!mountRef.current) {\n    mountRef.current = true;\n  }\n\n  React.useEffect(function () {\n    return destroyForm;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []); // Prepare children by `children` type\n\n  var childrenNode;\n  var childrenRenderProps = typeof children === 'function';\n\n  if (childrenRenderProps) {\n    var values = formInstance.getFieldsValue(true);\n    childrenNode = children(values, formInstance);\n  } else {\n    childrenNode = children;\n  } // Not use subscribe when using render props\n\n\n  useSubscribe(!childrenRenderProps); // Listen if fields provided. We use ref to save prev data here to avoid additional render\n\n  var prevFieldsRef = React.useRef();\n  React.useEffect(function () {\n    if (!isSimilar(prevFieldsRef.current || [], fields || [])) {\n      formInstance.setFields(fields || []);\n    }\n\n    prevFieldsRef.current = fields;\n  }, [fields, formInstance]);\n  var formContextValue = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, formInstance), {}, {\n      validateTrigger: validateTrigger\n    });\n  }, [formInstance, validateTrigger]);\n  var wrapperNode = /*#__PURE__*/React.createElement(FieldContext.Provider, {\n    value: formContextValue\n  }, childrenNode);\n\n  if (Component === false) {\n    return wrapperNode;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, restProps, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      formInstance.submit();\n    },\n    onReset: function onReset(event) {\n      var _restProps$onReset;\n\n      event.preventDefault();\n      formInstance.resetFields();\n      (_restProps$onReset = restProps.onReset) === null || _restProps$onReset === void 0 ? void 0 : _restProps$onReset.call(restProps, event);\n    }\n  }), wrapperNode);\n};\n\nexport default Form;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\nexport function stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\n\nfunction useWatch() {\n  var dependencies = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var form = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init; // Warning if not exist form instance\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n\n    var getFieldsValue = formInstance.getFieldsValue,\n        getInternalHooks = formInstance.getInternalHooks;\n\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        registerWatch = _getInternalHooks.registerWatch;\n\n    var cancelRegister = registerWatch(function (store) {\n      var newValue = getValue(store, namePathRef.current);\n      var nextValueStr = stringify(newValue); // Compare stringify in case it's nest object\n\n      if (valueStrRef.current !== nextValueStr) {\n        valueStrRef.current = nextValueStr;\n        setValue(newValue);\n      }\n    }); // TODO: We can improve this perf in future\n\n    var initialValue = getValue(getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  }, // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return value;\n}\n\nexport default useWatch;","import * as React from 'react';\nimport Field from './Field';\nimport List from './List';\nimport useForm from './useForm';\nimport FieldForm from './Form';\nimport { FormProvider } from './FormContext';\nimport FieldContext from './FieldContext';\nimport ListContext from './ListContext';\nimport useWatch from './useWatch';\nvar InternalForm = /*#__PURE__*/React.forwardRef(FieldForm);\nvar RefForm = InternalForm;\nRefForm.FormProvider = FormProvider;\nRefForm.Field = Field;\nRefForm.List = List;\nRefForm.useForm = useForm;\nRefForm.useWatch = useWatch;\nexport { Field, List, useForm, FormProvider, FieldContext, ListContext, useWatch };\nexport default RefForm;","/* eslint no-console:0 */\n\nimport {\n  ValidateError,\n  ValidateOption,\n  RuleValuePackage,\n  InternalRuleItem,\n  SyncErrorType,\n  RuleType,\n  Value,\n  Values,\n} from './interface';\n\nconst formatRegExp = /%[sdj%]/g;\n\ndeclare var ASYNC_VALIDATOR_NO_WARNING;\n\nexport let warning: (type: string, errors: SyncErrorType[]) => void = () => {};\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (\n      typeof console !== 'undefined' &&\n      console.warn &&\n      typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined'\n    ) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(\n  errors: ValidateError[],\n): Record<string, ValidateError[]> {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(\n  template: ((...args: any[]) => string) | string,\n  ...args: any[]\n): string {\n  let i = 0;\n  const len = args.length;\n  if (typeof template === 'function') {\n    return template.apply(null, args);\n  }\n  if (typeof template === 'string') {\n    let str = template.replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return (Number(args[i++]) as unknown) as string;\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return template;\n}\n\nfunction isNativeStringType(type: string) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value: Value, type?: string) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj: object) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  const results: ValidateError[] = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors: ValidateError[]) {\n    results.push(...(errors || []));\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors: ValidateError[]) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr: Record<string, RuleValuePackage[]>) {\n  const ret: RuleValuePackage[] = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push(...(objArr[k] || []));\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  errors: ValidateError[];\n  fields: Record<string, ValidateError[]>;\n\n  constructor(\n    errors: ValidateError[],\n    fields: Record<string, ValidateError[]>,\n  ) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\ntype ValidateFunc = (\n  data: RuleValuePackage,\n  doIt: (errors: ValidateError[]) => void,\n) => void;\n\nexport function asyncMap(\n  objArr: Record<string, RuleValuePackage[]>,\n  option: ValidateOption,\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n  source: Values,\n): Promise<Values> {\n  if (option.first) {\n    const pending = new Promise<Values>((resolve, reject) => {\n      const next = (errors: ValidateError[]) => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve(source);\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  const firstFields =\n    option.firstFields === true\n      ? Object.keys(objArr)\n      : option.firstFields || [];\n\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results: ValidateError[] = [];\n  const pending = new Promise<Values>((resolve, reject) => {\n    const next = (errors: ValidateError[]) => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n              new AsyncValidationError(results, convertFieldsError(results)),\n            )\n          : resolve(source);\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nfunction isErrorObj(\n  obj: ValidateError | string | (() => string),\n): obj is ValidateError {\n  return !!(obj && (obj as ValidateError).message !== undefined);\n}\n\nfunction getValue(value: Values, path: string[]) {\n  let v = value;\n  for (let i = 0; i < path.length; i++) {\n    if (v == undefined) {\n      return v;\n    }\n    v = v[path[i]];\n  }\n  return v;\n}\n\nexport function complementError(rule: InternalRuleItem, source: Values) {\n  return (oe: ValidateError | (() => string) | string): ValidateError => {\n    let fieldValue;\n    if (rule.fullFields) {\n      fieldValue = getValue(source, rule.fullFields);\n    } else {\n      fieldValue = source[(oe as any).field || rule.fullField];\n    }\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      fieldValue,\n      field: ((oe as unknown) as ValidateError).field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge<T extends object>(target: T, source: Partial<T>): T {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n","import { ExecuteRule } from '../interface';\nimport { format, isEmptyValue } from '../util';\n\nconst required: ExecuteRule = (rule, value, source, errors, options, type) => {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\n\nexport default required;\n","// https://github.com/kevva/url-regex/blob/master/index.js\nlet urlReg: RegExp;\n\nexport default () => {\n  if (urlReg) {\n    return urlReg;\n  }\n\n  const word = '[a-fA-F\\\\d:]';\n  const b = options =>\n    options && options.includeBoundaries\n      ? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n      : '';\n\n  const v4 =\n    '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\n  const v6seg = '[a-fA-F\\\\d]{1,4}';\n  const v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`\n    .replace(/\\s*\\/\\/.*$/gm, '')\n    .replace(/\\n/g, '')\n    .trim();\n\n  // Pre-compile only the exact regexes because adding a global flag make regexes stateful\n  const v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\n  const v4exact = new RegExp(`^${v4}$`);\n  const v6exact = new RegExp(`^${v6}$`);\n\n  const ip = options =>\n    options && options.exact\n      ? v46Exact\n      : new RegExp(\n          `(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(\n            options,\n          )})`,\n          'g',\n        );\n\n  ip.v4 = (options?) =>\n    options && options.exact\n      ? v4exact\n      : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\n  ip.v6 = (options?) =>\n    options && options.exact\n      ? v6exact\n      : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\n  const protocol = `(?:(?:[a-z]+:)?//)`;\n  const auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n  const ipv4 = ip.v4().source;\n  const ipv6 = ip.v6().source;\n  const host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n  const domain =\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n  const tld = `(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))`;\n  const port = '(?::\\\\d{2,5})?';\n  const path = '(?:[/?#][^\\\\s\"]*)?';\n  const regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ipv4}|${ipv6}|${host}${domain}${tld})${port}${path}`;\n  urlReg = new RegExp(`(?:^${regex}$)`, 'i');\n  return urlReg;\n};\n","import { ExecuteRule, Value } from '../interface';\nimport { format } from '../util';\nimport required from './required';\nimport getUrlRegex from './url';\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  // url: new RegExp(\n  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n  //   'i',\n  // ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value: Value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value: Value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value: Value) {\n    return Array.isArray(value);\n  },\n  regexp(value: Value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value: Value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value: Value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value: Value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value: Value) {\n    return typeof value === 'function';\n  },\n  email(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 320 &&\n      !!value.match(pattern.email)\n    );\n  },\n  url(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 2048 &&\n      !!value.match(getUrlRegex())\n    );\n  },\n  hex(value: Value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\nconst type: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        format(options.messages.types[ruleType], rule.fullField, rule.type),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n};\n\nexport default type;\n","import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nconst whitespace: ExecuteRule = (rule, value, source, errors, options) => {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\n\nexport default whitespace;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst range: ExecuteRule = (rule, value, source, errors, options) => {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      format(options.messages[key].range, rule.fullField, rule.min, rule.max),\n    );\n  }\n};\n\nexport default range;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteRule = (rule, value, source, errors, options) => {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')),\n    );\n  }\n};\n\nexport default enumerable;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst pattern: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n};\n\nexport default pattern;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst type: ExecuteValidator = (rule, value, callback, source, options) => {\n  const ruleType = rule.type;\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default type;\n","import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst string: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default string;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst method: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default method;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst number: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default number;\n","import { isEmptyValue } from '../util';\nimport rules from '../rule';\nimport { ExecuteValidator } from '../interface';\n\nconst boolean: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default boolean;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst regexp: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default regexp;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst integer: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default integer;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst floatFn: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default floatFn;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule/index';\n\nconst array: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default array;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst object: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default object;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteValidator = (\n  rule,\n  value,\n  callback,\n  source,\n  options,\n) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default enumerable;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst pattern: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default pattern;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst date: ExecuteValidator = (rule, value, callback, source, options) => {\n  // console.log('integer rule called %j', rule);\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default date;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\n\nconst required: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n};\n\nexport default required;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst any: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n};\n\nexport default any;\n","import { InternalValidateMessages } from './interface';\n\nexport function newMessages(): InternalValidateMessages {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n","import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\nimport {\n  InternalRuleItem,\n  InternalValidateMessages,\n  Rule,\n  RuleItem,\n  Rules,\n  ValidateCallback,\n  ValidateMessages,\n  ValidateOption,\n  Values,\n  RuleValuePackage,\n  ValidateError,\n  ValidateFieldsError,\n  SyncErrorType,\n  ValidateResult,\n} from './interface';\n\nexport * from './interface';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nclass Schema {\n  // ========================= Static =========================\n  static register = function register(type: string, validator) {\n    if (typeof validator !== 'function') {\n      throw new Error(\n        'Cannot register a validator by type, validator is not a function',\n      );\n    }\n    validators[type] = validator;\n  };\n\n  static warning = warning;\n\n  static messages = defaultMessages;\n\n  static validators = validators;\n\n  // ======================== Instance ========================\n  rules: Record<string, RuleItem[]> = null;\n  _messages: InternalValidateMessages = defaultMessages;\n\n  constructor(descriptor: Rules) {\n    this.define(descriptor);\n  }\n\n  define(rules: Rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n\n    Object.keys(rules).forEach(name => {\n      const item: Rule = rules[name];\n      this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  }\n\n  messages(messages?: ValidateMessages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  }\n\n  validate(\n    source: Values,\n    option?: ValidateOption,\n    callback?: ValidateCallback,\n  ): Promise<Values>;\n  validate(source: Values, callback: ValidateCallback): Promise<Values>;\n  validate(source: Values): Promise<Values>;\n\n  validate(source_: Values, o: any = {}, oc: any = () => {}): Promise<Values> {\n    let source: Values = source_;\n    let options: ValidateOption = o;\n    let callback: ValidateCallback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n      return Promise.resolve(source);\n    }\n\n    function complete(results: (ValidateError | ValidateError[])[]) {\n      let errors: ValidateError[] = [];\n      let fields: ValidateFieldsError = {};\n\n      function add(e: ValidateError | ValidateError[]) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (let i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        (callback as (\n          errors: ValidateError[],\n          fields: ValidateFieldsError,\n        ) => void)(errors, fields);\n      }\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n\n    const series: Record<string, RuleValuePackage[]> = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      const arr = this.rules[z];\n      let value = source[z];\n      arr.forEach(r => {\n        let rule: InternalRuleItem = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n\n        // Fill validator. Skip if nothing need to validate\n        rule.validator = this.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullField(key: string, schema: RuleItem) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n            fullFields: rule.fullFields ? [...rule.fullFields, key] : [key],\n          };\n        }\n\n        function cb(e: SyncErrorType | SyncErrorType[] = []) {\n          let errorList = Array.isArray(e) ? e : [e];\n          if (!options.suppressWarning && errorList.length) {\n            Schema.warning('async-validator:', errorList);\n          }\n          if (errorList.length && rule.message !== undefined) {\n            errorList = [].concat(rule.message);\n          }\n\n          // Fill error info\n          let filledErrors = errorList.map(complementError(rule, source));\n\n          if (options.first && filledErrors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(filledErrors);\n          }\n          if (!deep) {\n            doIt(filledErrors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                filledErrors = []\n                  .concat(rule.message)\n                  .map(complementError(rule, source));\n              } else if (options.error) {\n                filledErrors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(filledErrors);\n            }\n\n            let fieldsSchema: Record<string, Rule> = {};\n            if (rule.defaultField) {\n              Object.keys(data.value).map(key => {\n                fieldsSchema[key] = rule.defaultField;\n              });\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n\n            const paredFieldsSchema: Record<string, RuleItem[]> = {};\n\n            Object.keys(fieldsSchema).forEach(field => {\n              const fieldSchema = fieldsSchema[field];\n              const fieldSchemaList = Array.isArray(fieldSchema)\n                ? fieldSchema\n                : [fieldSchema];\n              paredFieldsSchema[field] = fieldSchemaList.map(\n                addFullField.bind(null, field),\n              );\n            });\n            const schema = new Schema(paredFieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (filledErrors && filledErrors.length) {\n                finalErrors.push(...filledErrors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res: ValidateResult;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          try {\n            res = rule.validator(rule, data.value, cb, data.source, options);\n          } catch (error) {\n            console.error?.(error);\n            // rethrow to report error\n            if (!options.suppressValidatorError) {\n              setTimeout(() => {\n                throw error;\n              }, 0);\n            }\n            cb(error.message);\n          }\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(\n              typeof rule.message === 'function'\n                ? rule.message(rule.fullField || rule.field)\n                : rule.message || `${rule.fullField || rule.field} fails`,\n            );\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && (res as Promise<void>).then) {\n          (res as Promise<void>).then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n      source,\n    );\n  }\n\n  getType(rule: InternalRuleItem) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  }\n\n  getValidationMethod(rule: InternalRuleItem) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || undefined;\n  }\n}\n\nexport default Schema;\n"],"sourceRoot":""}