{"version":3,"sources":["axios/config.js","axios/api.js","action/userAction.js","../node_modules/antd/es/layout/style/index.js","selector/user.js","../node_modules/antd/es/layout/layout.js","../node_modules/@ant-design/icons-svg/es/asn/BarsOutlined.js","../node_modules/@ant-design/icons/es/icons/BarsOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LeftOutlined.js","../node_modules/@ant-design/icons/es/icons/LeftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/RightOutlined.js","../node_modules/@ant-design/icons/es/icons/RightOutlined.js","../node_modules/antd/es/_util/isNumeric.js","../node_modules/antd/es/layout/Sider.js","../node_modules/antd/es/layout/index.js","../node_modules/antd/es/divider/style/index.js","../node_modules/antd/es/divider/index.js","components/HeadBar/HeadBarView.js","components/HeadBar/index.js","pages/Homepage/PannelView/index.js","components/ProgressBar/ProgressBarView.js","components/Upload/UploadPannel.js","constant/imageUrl.js","constant/config.js","model/fact.js","components/Generate/Components/ButtonBox/ButtonBoxView.js","components/Generate/Components/Spining/SpiningView.js","components/Generate/Components/commonSlot/CommonSlotView.js","components/Generate/ToFactsheet/ToFactsheet.js","constant/Color.js","components/Generate/GeneratePannel.js","pages/Homepage/PannelView/PannelView.js","pages/Homepage/Content/ContentView.js","pages/Homepage/Homepage.js"],"names":["applicationUrl","urlPrefix","uploadDataPrefix","activitiesPrefix","accountIp","config","url","publicPrefix","loginadmintest","loginRedirectUrl","logoutRedirectUrl","authenUrl","accessToken","userImage","checkToken","logout","logoutAuthSystem","users","activitiesApi","uploadData","uploadVideo","share","fetch","generate","data","axios","method","uuid","generatePDF","param","updateUserInfo","userInfo","type","ActionType","UPDATE_USER_INFO","updateOperation","operateState","UPDATE_USER_OPERATION","updateCovertType","convertType","UPDATE_CONVERT_TYPE","state","user","isLogin","getUserInfo","Cookies","get","JSON","parse","username","uid","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","LayoutContext","React","siderHook","addSider","removeSider","generator","_ref","suffixCls","tagName","displayName","BasicComponent","props","ref","getPrefixCls","ConfigContext","customizePrefixCls","prefixCls","_extends","Basic","className","children","others","classString","classNames","BasicLayout","_classNames","direction","_React$useState","_React$useState2","_slicedToArray","siders","setSiders","hasSider","Tag","_defineProperty","concat","contextValue","id","prev","_toConsumableArray","filter","currentId","Provider","value","Layout","Header","Footer","Content","BarsOutlined","AntdIcon","_objectSpread","icon","BarsOutlinedSvg","LeftOutlined","LeftOutlinedSvg","RightOutlined","RightOutlinedSvg","isNumeric","isNaN","parseFloat","isFinite","dimensionMaxMap","xs","sm","md","lg","xl","xxl","SiderContext","generateId","prefix","arguments","undefined","Sider","_a","trigger","_a$defaultCollapsed","defaultCollapsed","_a$theme","theme","_a$style","style","_a$collapsible","collapsible","_a$reverseArrow","reverseArrow","_a$width","width","_a$collapsedWidth","collapsedWidth","zeroWidthTriggerStyle","breakpoint","onCollapse","onBreakpoint","useContext","_useState","useState","collapsed","_useState2","setCollapsed","_useState3","_useState4","below","setBelow","useEffect","handleSetCollapsed","responsiveHandlerRef","useRef","current","mql","matches","responsiveHandler","window","matchMedia","addEventListener","error","addListener","removeEventListener","removeListener","uniqueId","toggle","siderCollapsed","divProps","omit","rawWidth","siderWidth","String","zeroWidthTrigger","onClick","defaultTrigger","expanded","triggerDom","divStyle","flex","maxWidth","minWidth","siderCls","renderSider","InternalLayout","Divider","_React$useContext","_props$type","_props$orientation","orientation","orientationMargin","dashed","plain","restProps","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","innerStyle","marginLeft","marginRight","role","HeadBarView","back","OperationType","BEFORE_UPLOAD","history","push","this","Component","connect","dispatch","userAction","PannelView","ProgressBarView","percent","isActive","status","showInfo","strokeColor","position","top","zIndex","display","Dragger","UploadPannel","originFileOb","dataIndex","errorMessage","initDone","intl","uploadDataToCloud","formData","Promise","reslove","reject","then","response","setState","JSONUPLOADED","getDataIndex","FAILED","options","currentLocale","message_zh","message_en","fail","uploadVideoToCloud","pathname","processData","schema","file_url","file_name","fields","fileURL","fileName","numericalFields","numerical","d","map","field","_that","d3","forEach","key","catch","console","log","onUploadChange","info","UPLOADIND","JSONUPLOADING","event","updateProgress","total","loaded","file","fileObj","originFileObj","FormData","append","beforeUpload","resolve","getPannelClassName","UPLOADED","isShowProgressbar","onUploadProgress","progressEvent","Math","round","PannelContentView","UploadTxtView","ClickToUploadView","generateProgress","FILE_LARGE","height","onChange","showUploadList","accept","AliCloud","ConvertForms","name","ConvertType","FACTSHEET","iconUrl","generateIconUrl","Fact","measure","subspace","groupby","focus","parameter","chart","score","information","significance","script","generatedScript","aggregated","aggregatedFact","compoundType","compoundChart","ButtonBoxView","text","onClickListener","backgroundImage","SpiningView","isSpining","tip","spinning","CommonSlotView","columnCount","form","pdfName","split","FileTypeAndNameView","justifyContent","marginBottom","myClassName","padding","href","target","rel","ToFactsheet","isDownloading","download","api","reUpload","reGnerate","editPage","click","supportedButton","button","index","GREEN","YELLOW","BLUE","GRAY","BAR_BACK","BAR","BAR_HIGHTLIGHT","AREA","LINE","BG_ABOVE","BG_BELOW","CONVERT","GeneratePannel","convertingType","timer","setInterval","count","clearInterval","GENERATED","max_iteration","storyParameter","max_story_length","maxStoryLength","GENERATING","clickGenerate","typeForm","facts","story","tempFacts","factDict","fact","generateStory","slice","nextProps","ConvertingArrow","FileNameView","ceil","idx","backgroundColor","Color","visibility","PUBLISHED","GeneratedPannel","Loading","marginTop","flexDirection","alignItems","fallback","handleGetDataIndex","ContentView","SloganView","Homepage","isLogIn"],"mappings":"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","file":"static/js/12.1f5332fd.chunk.js","sourcesContent":["let calliopeService = 'calliope-service.idvxlab.com';\r\nlet applicationUrl = 'https://pingpong.datacalliope.com';\r\nlet calliopePingpangService = 'pingpong-api.datacalliope.com:8010'\r\n\r\nlet urlPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}:8002/api/v1` : 'http://localhost:7001/api/v1';\r\nlet uploadDataPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopePingpangService}` : 'http://localhost:6208';//todo  7001\r\n// let uploadDataPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeLiteService}` : 'http://localhost:7001';//todo  7001\r\n// let uploadDataPrefix ='https://pingpong-api.datacalliope.com:8010';//todo  7001\r\n// let uploadDataPrefix = `https://${calliopePingpangService}`;//todo  7001\r\nlet activitiesPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}:8002/log/v1` : 'http://localhost:7001/log/v1';\r\nlet publicPrefix = process.env.NODE_ENV === 'production' ? applicationUrl : 'http://localhost:3000';\r\n//let client_id = '033338f2-02a8-44d4-8d54-5173b4a864f9';\r\nlet client_id = '6dcd0f8b-6990-4d69-9018-29b3351aa6ff';\r\nlet accountIp = `https://account.datacalliope.com`\r\nlet logoutRedirectUrlIp = `https://service.datacalliope.com:8001`\r\n\r\nconst config = {\r\n    url: {\r\n        applicationUrl: applicationUrl,\r\n        //share\r\n        publicPrefix: publicPrefix,\r\n        //login\r\n        loginadmintest: `${urlPrefix}/loginadmintest`,\r\n        loginRedirectUrl: `${accountIp}/#/login?response_type=code&client_id=${client_id}&grant_type=authorization_code&redirect_uri=${applicationUrl}`,\r\n        logoutRedirectUrl: `${applicationUrl}/#/logout`,\r\n        authenUrl: accountIp,\r\n        accessToken: `${urlPrefix}/accesstoken`,\r\n        userImage: `${logoutRedirectUrlIp}/img`,\r\n        checkToken: `${urlPrefix}/checktoken`,\r\n        //logout\r\n        logout: `${urlPrefix}/logout`,\r\n        logoutAuthSystem: `${logoutRedirectUrlIp}/logout`,\r\n        //activities\r\n        users: `${urlPrefix}/users`,\r\n        activitiesApi: `${activitiesPrefix}/users`,\r\n        //upload\r\n        uploadDataPrefix: uploadDataPrefix,\r\n        uploadData: `${uploadDataPrefix}/upload`,\r\n        uploadVideo: `${uploadDataPrefix}/uploadvideo`,\r\n        share: `${uploadDataPrefix}/share`,\r\n        // public: `${uploadDataPrefix}/public`,\r\n        fetch: `${uploadDataPrefix}/data/share`,\r\n    }\r\n}\r\nexport default config","// import config from '@/axios/config';\r\nimport config from '../axios/config';\r\nimport axios from 'axios';\r\n\r\nexport async function uploadData(formData) {\r\n    return new Promise((reslove, reject) => {\r\n        axios({\r\n            method: \"post\",\r\n            url: `${config.url.uploadData}`,\r\n            config: {\r\n                \"headers\": {\r\n                    'Content-Type': 'multipart/form-data' //application/json; charset=utf-8\r\n                },\r\n            },\r\n            data: formData\r\n        }).then((response) => {\r\n            if (response.status >= 400) {\r\n                reject();\r\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\r\n                reslove(response.data);\r\n            } else {\r\n                reject();\r\n            }\r\n        }).catch(error => {\r\n            reject();\r\n            //  message.error('error message');\r\n        })\r\n    })\r\n}\r\n\r\nexport async function uploadVideo(formData) {\r\n    return new Promise((reslove, reject) => {\r\n        axios({\r\n            method: \"post\",\r\n            url: `${config.url.uploadVideo}`,\r\n            config: {\r\n                \"headers\": {\r\n                    'Content-Type': 'multipart/form-data' //application/json; charset=utf-8\r\n                },\r\n            },\r\n            data: formData,\r\n            onUploadProgress :(progressEvent)=>{\r\n                //F12展示进度情况\r\n                console.log(progressEvent);\r\n                console.log(Math.round(progressEvent.loaded / progressEvent.total * 100) + '%');\r\n                //定义一个percent\r\n                let percent = (Math.round(progressEvent.loaded / progressEvent.total * 100))\r\n                console.log(percent);\r\n                this.setState({percent:percent})\r\n                // this.setState({progressEvent:(Math.round(progressEvent.loaded / progressEvent.total * 100))});\r\n            }\r\n        }).then((response) => {\r\n            if (response.status >= 400) {\r\n                reject();\r\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\r\n                reslove(response.data);\r\n            } else {\r\n                reject();\r\n            }\r\n        }).catch(error => {\r\n            reject();\r\n            //  message.error('error message');\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport function generate(url, data) {\r\n    return axios({\r\n        method: \"post\",\r\n        url: url,\r\n        config: {\r\n            \"headers\": {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n        },\r\n        data: data\r\n    })\r\n}\r\n\r\nexport function factScoring(filename, fact, method) {\r\n    return axios({\r\n        \"method\": \"POST\",\r\n        \"url\": config.url.factScoring,\r\n        \"headers\": {\r\n            \"Content-Type\": \"application/json; charset=utf-8\"\r\n        },\r\n        \"data\": {\r\n            \"file_name\": filename,\r\n            \"fact\": fact,\r\n            \"method\": method,\r\n        }\r\n    })\r\n}\r\n\r\nexport async function fetchStory(id) {\r\n    return axios({\r\n        method: \"get\",\r\n        \"url\": `${config.url.fetch}/${id}.json`,\r\n        config: {\r\n            \"headers\": {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n        }\r\n    })\r\n}\r\n\r\nexport async function share(uuid) {\r\n    return axios({\r\n        method: \"post\",\r\n        url: `${config.url.share}`,\r\n        config: {\r\n            \"headers\": {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n        },\r\n        data: {\r\n            \"uuid\": uuid\r\n        }\r\n    })\r\n}\r\n\r\n/*****\r\n *技术栈：\r\n ssr(后端渲染)，koa(koa-views)：模板渲染，渲染出要生成pdf的页面)\r\n node.js 生成pdf插件 puppeteer：将渲染的页面生成PDF\r\n koa-send：将生成的PDF返回给前端页面下载 \r\n * \r\n data是后端用于渲染页面的数据\r\n */\r\nexport function generatePDF(data) {\r\n    return axios({\r\n        method: 'post',\r\n        url: `/generatePDF`,\r\n        param: {},\r\n        data: data\r\n    })\r\n}\r\n","import ActionType from './type';\r\n\r\n\r\nexport const updateUserInfo = (userInfo) => ({\r\n    type: ActionType.UPDATE_USER_INFO,\r\n    userInfo\r\n})\r\n\r\nexport const updateOperation = (operateState) => ({\r\n    type: ActionType.UPDATE_USER_OPERATION,\r\n    operateState\r\n})\r\n\r\nexport const updateCovertType = (convertType) => ({\r\n    type: ActionType.UPDATE_CONVERT_TYPE,\r\n    convertType\r\n})\r\n\r\nexport const updateLocale = (currentLocale) => ({\r\n    type: ActionType.UPDATE_LOCALE,\r\n    currentLocale\r\n})","import '../../style/default.less';\nimport './index.less';","//import { createSelector } from 'reselect';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const operateState = state => state.user.operateState;\r\nexport const isLogin = state => state.user.isLogin;\r\nexport const convertType = state => state.user.convertType;\r\nexport const currentLocale = state => state.user.currentLocale;\r\n\r\nexport const getUserInfo = state => {\r\n    return Cookies.get(\"userInfo\") && JSON.parse(Cookies.get(\"userInfo\")) ? JSON.parse(Cookies.get(\"userInfo\")) : {\r\n        username: \"\",\r\n        uid: -1\r\n    }\r\n}\r\n\r\n","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nexport var LayoutContext = /*#__PURE__*/React.createContext({\n  siderHook: {\n    addSider: function addSider() {\n      return null;\n    },\n    removeSider: function removeSider() {\n      return null;\n    }\n  }\n});\n\nfunction generator(_ref) {\n  var suffixCls = _ref.suffixCls,\n      tagName = _ref.tagName,\n      displayName = _ref.displayName;\n  return function (BasicComponent) {\n    var Adapter = /*#__PURE__*/React.forwardRef(function (props, ref) {\n      var _React$useContext = React.useContext(ConfigContext),\n          getPrefixCls = _React$useContext.getPrefixCls;\n\n      var customizePrefixCls = props.prefixCls;\n      var prefixCls = getPrefixCls(suffixCls, customizePrefixCls);\n      return /*#__PURE__*/React.createElement(BasicComponent, _extends({\n        ref: ref,\n        prefixCls: prefixCls,\n        tagName: tagName\n      }, props));\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      Adapter.displayName = displayName;\n    }\n\n    return Adapter;\n  };\n}\n\nvar Basic = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      tagName = props.tagName,\n      others = __rest(props, [\"prefixCls\", \"className\", \"children\", \"tagName\"]);\n\n  var classString = classNames(prefixCls, className);\n  return /*#__PURE__*/React.createElement(tagName, _extends(_extends({\n    className: classString\n  }, others), {\n    ref: ref\n  }), children);\n});\nvar BasicLayout = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext2 = React.useContext(ConfigContext),\n      direction = _React$useContext2.direction;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      siders = _React$useState2[0],\n      setSiders = _React$useState2[1];\n\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      hasSider = props.hasSider,\n      Tag = props.tagName,\n      others = __rest(props, [\"prefixCls\", \"className\", \"children\", \"hasSider\", \"tagName\"]);\n\n  var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-sider\"), typeof hasSider === 'boolean' ? hasSider : siders.length > 0), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  var contextValue = React.useMemo(function () {\n    return {\n      siderHook: {\n        addSider: function addSider(id) {\n          setSiders(function (prev) {\n            return [].concat(_toConsumableArray(prev), [id]);\n          });\n        },\n        removeSider: function removeSider(id) {\n          setSiders(function (prev) {\n            return prev.filter(function (currentId) {\n              return currentId !== id;\n            });\n          });\n        }\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(LayoutContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(Tag, _extends({\n    ref: ref,\n    className: classString\n  }, others), children));\n});\nvar Layout = generator({\n  suffixCls: 'layout',\n  tagName: 'section',\n  displayName: 'Layout'\n})(BasicLayout);\nvar Header = generator({\n  suffixCls: 'layout-header',\n  tagName: 'header',\n  displayName: 'Header'\n})(Basic);\nvar Footer = generator({\n  suffixCls: 'layout-footer',\n  tagName: 'footer',\n  displayName: 'Footer'\n})(Basic);\nvar Content = generator({\n  suffixCls: 'layout-content',\n  tagName: 'main',\n  displayName: 'Content'\n})(Basic);\nexport { Header, Footer, Content };\nexport default Layout;","// This icon file is generated automatically.\nvar BarsOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"bars\", \"theme\": \"outlined\" };\nexport default BarsOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport BarsOutlinedSvg from \"@ant-design/icons-svg/es/asn/BarsOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar BarsOutlined = function BarsOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: BarsOutlinedSvg\n  }));\n};\n\nBarsOutlined.displayName = 'BarsOutlined';\nexport default /*#__PURE__*/React.forwardRef(BarsOutlined);","// This icon file is generated automatically.\nvar LeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\" } }] }, \"name\": \"left\", \"theme\": \"outlined\" };\nexport default LeftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/LeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftOutlined = function LeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LeftOutlinedSvg\n  }));\n};\n\nLeftOutlined.displayName = 'LeftOutlined';\nexport default /*#__PURE__*/React.forwardRef(LeftOutlined);","// This icon file is generated automatically.\nvar RightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z\" } }] }, \"name\": \"right\", \"theme\": \"outlined\" };\nexport default RightOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RightOutlinedSvg from \"@ant-design/icons-svg/es/asn/RightOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RightOutlined = function RightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RightOutlinedSvg\n  }));\n};\n\nRightOutlined.displayName = 'RightOutlined';\nexport default /*#__PURE__*/React.forwardRef(RightOutlined);","var isNumeric = function isNumeric(value) {\n  return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\nexport default isNumeric;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport BarsOutlined from \"@ant-design/icons/es/icons/BarsOutlined\";\nimport LeftOutlined from \"@ant-design/icons/es/icons/LeftOutlined\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport isNumeric from '../_util/isNumeric';\nimport { LayoutContext } from './layout';\nvar dimensionMaxMap = {\n  xs: '479.98px',\n  sm: '575.98px',\n  md: '767.98px',\n  lg: '991.98px',\n  xl: '1199.98px',\n  xxl: '1599.98px'\n};\nexport var SiderContext = /*#__PURE__*/React.createContext({});\n\nvar generateId = function () {\n  var i = 0;\n  return function () {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    i += 1;\n    return \"\".concat(prefix).concat(i);\n  };\n}();\n\nvar Sider = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      trigger = _a.trigger,\n      children = _a.children,\n      _a$defaultCollapsed = _a.defaultCollapsed,\n      defaultCollapsed = _a$defaultCollapsed === void 0 ? false : _a$defaultCollapsed,\n      _a$theme = _a.theme,\n      theme = _a$theme === void 0 ? 'dark' : _a$theme,\n      _a$style = _a.style,\n      style = _a$style === void 0 ? {} : _a$style,\n      _a$collapsible = _a.collapsible,\n      collapsible = _a$collapsible === void 0 ? false : _a$collapsible,\n      _a$reverseArrow = _a.reverseArrow,\n      reverseArrow = _a$reverseArrow === void 0 ? false : _a$reverseArrow,\n      _a$width = _a.width,\n      width = _a$width === void 0 ? 200 : _a$width,\n      _a$collapsedWidth = _a.collapsedWidth,\n      collapsedWidth = _a$collapsedWidth === void 0 ? 80 : _a$collapsedWidth,\n      zeroWidthTriggerStyle = _a.zeroWidthTriggerStyle,\n      breakpoint = _a.breakpoint,\n      onCollapse = _a.onCollapse,\n      onBreakpoint = _a.onBreakpoint,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"trigger\", \"children\", \"defaultCollapsed\", \"theme\", \"style\", \"collapsible\", \"reverseArrow\", \"width\", \"collapsedWidth\", \"zeroWidthTriggerStyle\", \"breakpoint\", \"onCollapse\", \"onBreakpoint\"]);\n\n  var _useContext = useContext(LayoutContext),\n      siderHook = _useContext.siderHook;\n\n  var _useState = useState('collapsed' in props ? props.collapsed : defaultCollapsed),\n      _useState2 = _slicedToArray(_useState, 2),\n      collapsed = _useState2[0],\n      setCollapsed = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      below = _useState4[0],\n      setBelow = _useState4[1];\n\n  useEffect(function () {\n    if ('collapsed' in props) {\n      setCollapsed(props.collapsed);\n    }\n  }, [props.collapsed]);\n\n  var handleSetCollapsed = function handleSetCollapsed(value, type) {\n    if (!('collapsed' in props)) {\n      setCollapsed(value);\n    }\n\n    onCollapse === null || onCollapse === void 0 ? void 0 : onCollapse(value, type);\n  }; // ========================= Responsive =========================\n\n\n  var responsiveHandlerRef = useRef();\n\n  responsiveHandlerRef.current = function (mql) {\n    setBelow(mql.matches);\n    onBreakpoint === null || onBreakpoint === void 0 ? void 0 : onBreakpoint(mql.matches);\n\n    if (collapsed !== mql.matches) {\n      handleSetCollapsed(mql.matches, 'responsive');\n    }\n  };\n\n  useEffect(function () {\n    function responsiveHandler(mql) {\n      return responsiveHandlerRef.current(mql);\n    }\n\n    var mql;\n\n    if (typeof window !== 'undefined') {\n      var _window = window,\n          matchMedia = _window.matchMedia;\n\n      if (matchMedia && breakpoint && breakpoint in dimensionMaxMap) {\n        mql = matchMedia(\"(max-width: \".concat(dimensionMaxMap[breakpoint], \")\"));\n\n        try {\n          mql.addEventListener('change', responsiveHandler);\n        } catch (error) {\n          mql.addListener(responsiveHandler);\n        }\n\n        responsiveHandler(mql);\n      }\n    }\n\n    return function () {\n      try {\n        mql === null || mql === void 0 ? void 0 : mql.removeEventListener('change', responsiveHandler);\n      } catch (error) {\n        mql === null || mql === void 0 ? void 0 : mql.removeListener(responsiveHandler);\n      }\n    };\n  }, [breakpoint]); // in order to accept dynamic 'breakpoint' property, we need to add 'breakpoint' into dependency array.\n\n  useEffect(function () {\n    var uniqueId = generateId('ant-sider-');\n    siderHook.addSider(uniqueId);\n    return function () {\n      return siderHook.removeSider(uniqueId);\n    };\n  }, []);\n\n  var toggle = function toggle() {\n    handleSetCollapsed(!collapsed, 'clickTrigger');\n  };\n\n  var _useContext2 = useContext(ConfigContext),\n      getPrefixCls = _useContext2.getPrefixCls;\n\n  var renderSider = function renderSider() {\n    var _classNames;\n\n    var prefixCls = getPrefixCls('layout-sider', customizePrefixCls);\n    var divProps = omit(props, ['collapsed']);\n    var rawWidth = collapsed ? collapsedWidth : width; // use \"px\" as fallback unit for width\n\n    var siderWidth = isNumeric(rawWidth) ? \"\".concat(rawWidth, \"px\") : String(rawWidth); // special trigger when collapsedWidth == 0\n\n    var zeroWidthTrigger = parseFloat(String(collapsedWidth || 0)) === 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      onClick: toggle,\n      className: classNames(\"\".concat(prefixCls, \"-zero-width-trigger\"), \"\".concat(prefixCls, \"-zero-width-trigger-\").concat(reverseArrow ? 'right' : 'left')),\n      style: zeroWidthTriggerStyle\n    }, trigger || /*#__PURE__*/React.createElement(BarsOutlined, null)) : null;\n    var iconObj = {\n      expanded: reverseArrow ? /*#__PURE__*/React.createElement(RightOutlined, null) : /*#__PURE__*/React.createElement(LeftOutlined, null),\n      collapsed: reverseArrow ? /*#__PURE__*/React.createElement(LeftOutlined, null) : /*#__PURE__*/React.createElement(RightOutlined, null)\n    };\n    var status = collapsed ? 'collapsed' : 'expanded';\n    var defaultTrigger = iconObj[status];\n    var triggerDom = trigger !== null ? zeroWidthTrigger || /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-trigger\"),\n      onClick: toggle,\n      style: {\n        width: siderWidth\n      }\n    }, trigger || defaultTrigger) : null;\n\n    var divStyle = _extends(_extends({}, style), {\n      flex: \"0 0 \".concat(siderWidth),\n      maxWidth: siderWidth,\n      minWidth: siderWidth,\n      width: siderWidth\n    });\n\n    var siderCls = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(theme), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-collapsed\"), !!collapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-trigger\"), collapsible && trigger !== null && !zeroWidthTrigger), _defineProperty(_classNames, \"\".concat(prefixCls, \"-below\"), !!below), _defineProperty(_classNames, \"\".concat(prefixCls, \"-zero-width\"), parseFloat(siderWidth) === 0), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"aside\", _extends({\n      className: siderCls\n    }, divProps, {\n      style: divStyle,\n      ref: ref\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-children\")\n    }, children), collapsible || below && zeroWidthTrigger ? triggerDom : null);\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      siderCollapsed: collapsed\n    };\n  }, [collapsed]);\n  return /*#__PURE__*/React.createElement(SiderContext.Provider, {\n    value: contextValue\n  }, renderSider());\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Sider.displayName = 'Sider';\n}\n\nexport default Sider;","import InternalLayout, { Content, Footer, Header } from './layout';\nimport Sider from './Sider';\nvar Layout = InternalLayout;\nLayout.Header = Header;\nLayout.Footer = Footer;\nLayout.Content = Content;\nLayout.Sider = Sider;\nexport default Layout;","import '../../style/default.less';\nimport './index.less';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'horizontal' : _props$type,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n      orientationMargin = props.orientationMargin,\n      className = props.className,\n      children = props.children,\n      dashed = props.dashed,\n      plain = props.plain,\n      restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n  var prefixCls = getPrefixCls('divider', customizePrefixCls);\n  var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n  var hasChildren = !!children;\n  var hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  var hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-left\"), hasCustomMarginLeft), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-right\"), hasCustomMarginRight), _classNames), className);\n\n  var innerStyle = _extends(_extends({}, hasCustomMarginLeft && {\n    marginLeft: orientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: orientationMargin\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classString\n  }, restProps, {\n    role: \"separator\"\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner-text\"),\n    style: innerStyle\n  }, children));\n};\n\nexport default Divider;","import React, { Component } from 'react';\r\nimport './HeadBarView.less';\r\nimport OperationType from '../../constant/OperationType';\r\n\r\nexport default class HeadBarView extends Component {\r\n\r\n    back = () => {\r\n        this.props.updateOperation(OperationType.BEFORE_UPLOAD)\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"headerBarWrapper\" >\r\n                <div className=\"headerBarLeft\">\r\n                    <div onClick={this.back}></div>\r\n                    <span>国家乒乓球队大数据平台</span>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport HeadBarView from './HeadBarView';\r\n// import { isLogin, getUserInfo } from \"@/selector/user\";\r\nimport { isLogin, getUserInfo } from \"../../selector/user\";\r\nimport * as userAction from '../../action/userAction';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    //user\r\n    isLogin: isLogin(state),\r\n    userInfo: getUserInfo(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUserInfo: (userInfo) => dispatch(userAction.updateUserInfo(userInfo)),\r\n        updateOperation: (operateState) => dispatch(userAction.updateOperation(operateState)),\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadBarView);\r\n","import { connect } from 'react-redux';\r\n// import { operateState } from '@/selector/user';\r\n// import * as userAction from '@/action/userAction';\r\nimport { operateState } from '../../../selector/user';\r\nimport * as userAction from '../../../action/userAction';\r\n\r\nimport PannelView from './PannelView';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    operateState: operateState(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateOperation: (operateState) => dispatch(userAction.updateOperation(operateState)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PannelView);\r\n","import React from 'react';\r\nimport { Progress } from \"antd\";\r\n\r\nexport default class ProgressBarView extends React.Component {\r\n\r\n    render() {\r\n        const { percent, isActive } = this.props\r\n        return (<Progress\r\n            percent={percent}\r\n            status={isActive ? \"active\" : \"\"}\r\n            showInfo={false}\r\n            strokeColor=\"#EB6331\"\r\n            style={{\r\n                position: \"absolute\", top: \"-10px\", zIndex: \"9999\",\r\n                display: isActive ? \"block\" : \"none\"\r\n            }} />)\r\n    }\r\n}","import React from 'react';\r\nimport { Upload } from 'antd';\r\n// import ProgressBarView from '@/components/ProgressBar/ProgressBarView'\r\n// import OperationType from '@/constant/OperationType'\r\n// import config from '@/axios/config';\r\n// import * as api from '@/axios/api';\r\nimport ProgressBarView from '../../components/ProgressBar/ProgressBarView'\r\nimport OperationType from '../../constant/OperationType'\r\nimport config from '../../axios/config';\r\nimport * as api from '../../axios/api';\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\n\r\nimport \"./UploadPannel.less\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nexport default class UploadPannel extends React.Component {\r\n    state = {\r\n        originFileOb: {},\r\n        dataIndex: 0,\r\n        operateState: this.props.operateState,\r\n        errorMessage: this.props.initDone && this.props.intl.get(\"upload failed\"),\r\n        percent: 0\r\n    }\r\n    \r\n\r\n    uploadDataToCloud = (formData) => {\r\n        return new Promise((reslove, reject) => {\r\n            this.uploadData(formData, config.url.uploadData).then((response) => {\r\n                // this.setState({ operateState: OperationType.GENERATING }); //加快页面交互的响应\r\n                this.setState({ operateState: OperationType.JSONUPLOADED }); //加快页面交互的响应\r\n                const { operateState } = this.state;\r\n                this.setState({ dataIndex: response.uuid})\r\n                this.props.getDataIndex(response.uuid)\r\n                if (response.status === 'error') {\r\n                    let { intl } = this.props\r\n                    this.setState({\r\n                        operateState: OperationType.FAILED,\r\n                        errorMessage: intl.options.currentLocale === 'zh-CN' ? response.message_zh : response.message_en\r\n                    })\r\n                    reject();\r\n                    return null;\r\n                }\r\n                reslove(response);\r\n            }, fail => {\r\n                this.setState({\r\n                    operateState: OperationType.FAILED,\r\n                    errorMessage: this.props.initDone && this.props.intl.get(\"upload failed\")\r\n                })\r\n                reject();\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadVideoToCloud = (formData) => {\r\n        return new Promise((reslove, reject) => {\r\n            this.uploadVideo(formData, config.url.uploadVideo).then((response) => {\r\n                // this.setState({ operateState: OperationType.GENERATING }); //加快页面交互的响应\r\n                const { dataIndex } = this.state;\r\n                // this.props.history.push('/show')\r\n                this.props.history.push({\r\n                    pathname: '/show',\r\n                    dataIndex: dataIndex\r\n                })\r\n                if (response.status === 'error') {\r\n                    let { intl } = this.props\r\n                    this.setState({\r\n                        operateState: OperationType.FAILED,\r\n                        errorMessage: intl.options.currentLocale === 'zh-CN' ? response.message_zh : response.message_en\r\n                    })\r\n                    reject();\r\n                    return null;\r\n                }\r\n                reslove(response);\r\n            }, fail => {\r\n                this.setState({\r\n                    operateState: OperationType.FAILED,\r\n                    errorMessage: this.props.initDone && this.props.intl.get(\"upload failed\")\r\n                })\r\n                reject();\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadVideo(formData) {\r\n        return new Promise((reslove, reject) => {\r\n            axios({\r\n                method: \"post\",\r\n                url: `${config.url.uploadVideo}`,\r\n                config: {\r\n                    \"headers\": {\r\n                        'Content-Type': 'multipart/form-data' //application/json; charset=utf-8\r\n                    },\r\n                },\r\n                data: formData,\r\n                onUploadProgress :(progressEvent)=>{\r\n                    //F12展示进度情况\r\n                    console.log(progressEvent);\r\n                    console.log(Math.round(progressEvent.loaded / progressEvent.total * 100) + '%');\r\n                    //定义一个percent\r\n                    let percent = (Math.round(progressEvent.loaded / progressEvent.total * 100))\r\n                    console.log(percent);\r\n                    this.setState({percent:percent})\r\n                    // this.setState({progressEvent:(Math.round(progressEvent.loaded / progressEvent.total * 100))});\r\n                }\r\n            }).then((response) => {\r\n                if (response.status >= 400) {\r\n                    reject();\r\n                } else if (response.status === 200 || response.status === 201 || response.status === 204) {\r\n                    reslove(response.data);\r\n                } else {\r\n                    reject();\r\n                }\r\n            }).catch(error => {\r\n                reject();\r\n                //  message.error('error message');\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadData(formData) {\r\n        return new Promise((reslove, reject) => {\r\n            axios({\r\n                method: \"post\",\r\n                url: `${config.url.uploadData}`,\r\n                config: {\r\n                    \"headers\": {\r\n                        'Content-Type': 'multipart/form-data' //application/json; charset=utf-8\r\n                    },\r\n                },\r\n                data: formData,\r\n                onUploadProgress :(progressEvent)=>{\r\n                    let percent = (Math.round(progressEvent.loaded / progressEvent.total * 100))\r\n                    this.setState({percent:percent})\r\n                }\r\n            }).then((response) => {\r\n                if (response.status >= 400) {\r\n                    reject();\r\n                } else if (response.status === 200 || response.status === 201 || response.status === 204) {\r\n                    reslove(response.data);\r\n                } else {\r\n                    reject();\r\n                }\r\n            }).catch(error => {\r\n                reject();\r\n                //  message.error('error message');\r\n            })\r\n        })\r\n    }\r\n\r\n    processData = (response) => {\r\n        if (!response.schema || !response.file_url || !response.file_name) {\r\n            // this.props.updateOperation(OperationType.UPLOADED)//更新UI\r\n            const { operateState } = this.state;\r\n            if(operateState === OperationType.JSONUPLOADED){\r\n                this.props.updateOperation(OperationType.JSONUPLOADED)//更新UI\r\n                this.setState({\r\n                    operateState: OperationType.JSONUPLOADED,\r\n                })\r\n            }\r\n            else{\r\n                // this.props.updateOperation(OperationType.UPLOADED)//更新UI\r\n                // this.setState({\r\n                //     operateState: OperationType.UPLOADED,\r\n                // })\r\n                // this.props.updateOperation(OperationType.GENERATING)//更新UI\r\n                // this.setState({\r\n                //     operateState: OperationType.GENERATING,\r\n                // })\r\n                this.props.history.push('/show')\r\n            }\r\n            // this.props.updateOperation(OperationType.JSONUPLOADED)//更新UI\r\n            return\r\n        }\r\n        let schema = response.schema.fields\r\n        let fileURL = config.url.uploadDataPrefix + response.file_url\r\n        let fileName = response.file_name\r\n        let numericalFields = []\r\n        let numerical = schema.filter(d => d.type === \"numerical\")\r\n        numericalFields = numerical.map(d => d.field)\r\n        let _that = this\r\n        d3.csv(fileURL)\r\n            .then(function (data) {\r\n                data.forEach((d, i) => {\r\n                    for (let key in d) {\r\n                        if (numericalFields.indexOf(key) !== -1) {\r\n                            d[key] = parseFloat(d[key])\r\n                        }\r\n                    }\r\n                })\r\n                _that.props.uploadData(fileName, schema, data); //更新数据到redux中\r\n                // _that.props.updateOperation(OperationType.UPLOADED)//更新UI\r\n                // _that.props.updateOperation(OperationType.GENERATING)//更新UI\r\n                this.props.history.push('/show')\r\n            }).catch(function (error) {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    onUploadChange = (info) => {\r\n        /**** update UI ****/\r\n        const { operateState } = this.state;\r\n        if(operateState === OperationType.JSONUPLOADED){\r\n            this.setState({\r\n                operateState: OperationType.UPLOADIND,\r\n            })\r\n        }\r\n        if(operateState === OperationType.BEFORE_UPLOAD){\r\n            this.setState({\r\n                operateState: OperationType.JSONUPLOADING,\r\n            })\r\n        }\r\n        // this.setState({\r\n        //     operateState: OperationType.UPLOADIND,\r\n        //     // operateState: OperationType.JSONUPLOADED,\r\n        // })\r\n        if (info.event) {\r\n            this.props.updateProgress(info.event.total, (info.event.total - info.event.loaded));\r\n        }\r\n        /**** update UI  the end ****/\r\n\r\n        const { status } = info.file;\r\n        if (status !== 'uploading') {\r\n            const { dataIndex } = this.state;\r\n            let fileObj = info.file.originFileObj;\r\n            let formData = new FormData();\r\n            formData.append(\"file\", fileObj);\r\n            formData.append(\"uuid\", dataIndex);\r\n            if(operateState === OperationType.JSONUPLOADING){\r\n                //step:1 upload data\r\n                this.uploadDataToCloud(formData)\r\n                    //step 2:process data\r\n                    .then((response) => this.processData(response))\r\n            }\r\n            else if(operateState === OperationType.UPLOADIND){\r\n                //step:1 upload data\r\n                this.uploadVideoToCloud(formData)\r\n                    //step 2:process data\r\n                    .then((response) => this.processData(response))\r\n            }\r\n            else{\r\n                //step:1 upload data\r\n                this.uploadDataToCloud(formData)\r\n                    //step 2:process data\r\n                    .then((response) => this.processData(response))\r\n            }\r\n            // //step:1 upload data\r\n            // this.uploadDataToCloud(formData)\r\n            //     //step 2:process data\r\n            //     .then((response) => this.processData(response))\r\n        }\r\n    }\r\n    beforeUpload = (info) => {\r\n        return new Promise((resolve, reject) => {\r\n            return resolve(true);\r\n            // if (info.size <= 1048576 * 5) {\r\n            //     return resolve(true);\r\n            // } else {\r\n            //     this.setState({\r\n            //         operateState: OperationType.FILE_LARGE\r\n            //     })\r\n            //     reject(false);\r\n            // }\r\n        });\r\n    }\r\n\r\n    getPannelClassName = () => {\r\n        const { operateState } = this.state;\r\n        switch (operateState) {\r\n            case OperationType.BEFORE_UPLOAD:\r\n            case OperationType.JSONUPLOADED:\r\n                return \"draggerPannelCommon yellowPannel\";\r\n            case OperationType.UPLOADED:\r\n                return \"pannelWithConvertType whitePannel\";\r\n\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    isShowProgressbar = () => {\r\n        const { operateState } = this.state;\r\n        if (operateState === OperationType.UPLOADIND || operateState === OperationType.JSONUPLOADING) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { intl, initDone, generateProgress } = this.props;\r\n        const { operateState } = this.state;\r\n\r\n        /***\r\n            上传失败或者文件过大的情况下，点击此按钮可以重新上传\r\n            ***/\r\n        const ClickToUploadView = () => {\r\n            return (\r\n                <div className=\"ClickToUpload\">\r\n                    <div ></div>\r\n                    <p>点击重新上传</p>\r\n                </div>\r\n            )\r\n        };\r\n\r\n        let PannelContentView;\r\n        let UploadTxtView;\r\n        switch (operateState) {\r\n            case OperationType.BEFORE_UPLOAD:\r\n                UploadTxtView = <div className='UploadTxtDiv'><div></div> <span>上传赛场数据</span></div>\r\n                PannelContentView = <>\r\n                    <div className=\"JSONFileImage\">\r\n                        <div className='jsonIconWhite'></div>\r\n                    </div>\r\n                    <div className=\"uploadView\">\r\n                        <div className=\"uploadBtn\">\r\n                            {/* <div></div> */}\r\n                            上传数据\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                break;\r\n            case OperationType.JSONUPLOADING:\r\n                UploadTxtView = <div className='UploadTxtDiv'><div></div> <span>上传赛场数据</span></div>\r\n                PannelContentView = <div className=\"uploading\">\r\n                    <div className='uploadImage'></div>\r\n                    <span>上传中，请稍后</span>\r\n                    <div className='dot'>...</div>\r\n                </div>\r\n                break;\r\n            case OperationType.UPLOADIND:\r\n                UploadTxtView = <div className='UploadTxtDiv'><div></div> <span>上传赛场视频</span></div>\r\n                PannelContentView = <div className=\"uploading\">\r\n                    <div className='uploadImage'></div>\r\n                    <span>上传中，请稍后</span>\r\n                    <div className='dot'>...</div>\r\n                </div>\r\n                break;\r\n            case OperationType.JSONUPLOADED:\r\n                UploadTxtView = <div className='UploadTxtDiv'><div></div> <span>上传赛场视频</span></div>\r\n                PannelContentView = <>\r\n                    <div className=\"MP4FileImage\">\r\n                        <div className='mp4IconWhite'></div>\r\n                    </div>\r\n                    <div className=\"uploadView\">\r\n                        <div className=\"uploadBtn\">\r\n                            {/* <div></div> */}\r\n                            上传视频\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                break;\r\n            case OperationType.FAILED:\r\n                UploadTxtView = <div className='UploadTxtDiv'><div></div> <span>上传失败 请重新上传</span></div>\r\n                PannelContentView = <>\r\n                    <div className='errorFailImage'>\r\n                        <div className=\"iconFailed\"></div>\r\n                        <p className=\"hintText\">{this.state.errorMessage}</p>\r\n                    </div>\r\n                    <ClickToUploadView />\r\n                </>\r\n                break;\r\n            case OperationType.FILE_LARGE: //large than 5MB\r\n                UploadTxtView = <div className='UploadTxtDiv'><div></div> <span>上传赛场数据</span></div>\r\n                PannelContentView = <>\r\n                    <div className=\"largeFileView\">\r\n                        <div></div>\r\n                        <span>{initDone && intl.get(\"larger than 5MB\")}</span>\r\n                    </div>\r\n                    <ClickToUploadView />\r\n                </>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    { UploadTxtView }\r\n                </div>\r\n                <div className={this.getPannelClassName()} style={{ position: 'relative' }}>\r\n                    <ProgressBarView percent={this.state.percent} isActive={this.isShowProgressbar()} />\r\n                    <div style={{ height: \"340px\", flex: 1 }}>\r\n                        <Dragger\r\n                            beforeUpload={this.beforeUpload}\r\n                            onChange={this.onUploadChange}\r\n                            showUploadList={false}\r\n                            accept=\".json, .mp4\">\r\n                            <div className=\"pannelContent\">\r\n                                {\r\n                                    PannelContentView\r\n                                }\r\n                            </div>\r\n                        </Dragger>\r\n                    </div>\r\n                </div >\r\n            </>\r\n        )\r\n    }\r\n}","const AliCloud = 'http://calliope-dev.oss-cn-shanghai.aliyuncs.com/image/images'\r\nexport default AliCloud","import ConvertType from './ConvertType'\r\n// import AliCloud from '@/constant/imageUrl'\r\nimport AliCloud from '../constant/imageUrl'\r\n\r\nlet ConvertForms = [\r\n    {\r\n        name: ConvertType.FACTSHEET,\r\n        iconUrl: `${AliCloud}/convertType/factsheet.png`,\r\n        generateIconUrl: `${AliCloud}/convertType/factsheet_black.png`\r\n    },\r\n    // {\r\n    //     name: ConvertType.H5,\r\n    //     iconUrl: '${AliCloud}/convertType/H5.png',\r\n    //     generateIconUrl: '${AliCloud}/convertType/H5_black.png'\r\n    // }\r\n]\r\nexport default ConvertForms;","// import {genFactSentence,genSubtitle} from '../sentencer';\r\n\r\nexport default class Fact {\r\n    constructor(type, measure = [], subspace = [], groupby = [], focus = [], parameter = [], chart = \"\", score = 0, information = 0, significance = 0) {\r\n        this.type = type;\r\n        this.measure = measure;\r\n        this.subspace = subspace;\r\n        this.groupby = groupby;\r\n        this.focus = focus;\r\n        this.parameter = parameter;\r\n        this.score = score;\r\n        this.information = information;\r\n        this.significance = significance;\r\n        this.chart = chart;\r\n        // this.generatedScript = genFactSentence(this);\r\n        // this.generatedSubtitle = genSubtitle(this)\r\n        // Compound Fact\r\n        this.aggregated = false;\r\n        this.aggregatedFact = null;\r\n        this.compoundType = '';\r\n        this.compoundChart = 'juxtaposition';\r\n    }\r\n    script = () => this.generatedScript;\r\n}","\r\nimport React from 'react'\r\nimport './ButtonBoxView.less'\r\n\r\n\r\nexport default class ButtonBoxView extends React.Component {\r\n\r\n    render() {\r\n        const { iconUrl, text } = this.props\r\n        return <div className='button-box' onClick={() => this.props.onClickListener()}>\r\n            <div style={{ backgroundImage: `url(${iconUrl})` }}></div>\r\n            <p>{text}</p>\r\n        </div>\r\n\r\n    }\r\n}","\r\nimport React from 'react'\r\nimport { Spin } from 'antd';\r\nimport './SpiningView.less'\r\n\r\nexport default class SpiningView extends React.Component {\r\n\r\n    render() {\r\n        const { isSpining, initDone, intl } = this.props\r\n        return <>\r\n            <Spin tip={initDone && intl.get(\"downloading\")} spinning={isSpining} />\r\n        </>\r\n    }\r\n}","\r\nimport React from 'react'\r\nimport SpiningView from '../Spining/SpiningView';\r\nimport './CommonSlotView.less'\r\nimport '../../common.less'\r\n\r\n\r\n/**** 定义组件的外观***/\r\nexport default class CommonSlotView extends React.Component {\r\n    render() {\r\n        const { fileName, initDone, intl, columnCount, form, isSpining } = this.props\r\n        let pdfName = fileName && fileName.split(\".csv\")[0]\r\n\r\n        const FileTypeAndNameView = () => {\r\n            return <div className='fileTypeAndNameView' style={{ justifyContent: isSpining ? \"flex-start\" : \"center\" }}>\r\n                <div className='fileType-icon'></div>\r\n                <span style={{ marginBottom: \"0px\" }} >{form === \"H5\" ? '' : `${pdfName}.pdf`}</span>\r\n            </div>\r\n        }\r\n\r\n        return <div className={this.props.myClassName ? `generated-view-dox ${this.props.myClassName}` : 'generated-view-dox'}>\r\n            <span >{initDone && intl.get(form === \"H5\" ? \"convertedTxtH5\" : \"convertedTxt\")}</span>\r\n            <FileTypeAndNameView />\r\n            <div className=\"FuntionView\" style={{ columnCount }}>\r\n                <div className='download-box'>\r\n                    <SpiningView isSpining={isSpining} {...this.props} />\r\n                </div>\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n            <span >{initDone && intl.get(\"Visit\")}<a style={{ padding: '0px 5px' }} href='https://datacalliope.com' target=\"_blank\" rel=\"noopener noreferrer\">Calliope · Data</a>{initDone && intl.get(\"VisitCalliope\")}</span>\r\n        </div>\r\n    }\r\n}","import React from 'react'\r\n// import ConvertForms from '@/constant/config'\r\n// import OperationType from '@/constant/OperationType'\r\nimport ConvertForms from '../../../constant/config'\r\nimport OperationType from '../../../constant/OperationType'\r\nimport ButtonBoxView from '../Components/ButtonBox/ButtonBoxView'\r\nimport CommonSlotView from '../Components/commonSlot/CommonSlotView'\r\n// import AliCloud from '@/constant/imageUrl'\r\n// import * as api from '@/axios/api'\r\nimport AliCloud from '../../../constant/imageUrl'\r\nimport * as api from '../../../axios/api'\r\nimport './ToFactsheet.less'\r\nimport '../common.less'\r\n\r\n\r\nexport default class ToFactsheet extends React.Component {\r\n\r\n    state = {\r\n        isDownloading: false\r\n    }\r\n\r\n    download = () => {\r\n        this.setState({\r\n            isDownloading: true\r\n        })\r\n        //pdf下载功能\r\n        let data = {\r\n\r\n        }\r\n        api.generatePDF(data).then(() => { })\r\n    }\r\n\r\n    reUpload = () => {\r\n        this.props.updateOperation(OperationType.BEFORE_UPLOAD)\r\n    }\r\n    reGnerate = () => {\r\n        this.props.reGnerate(ConvertForms[0])\r\n    }\r\n    editPage = () => {\r\n        this.props.history.push('/edit/factsheet')\r\n    }\r\n    click = (text) => {\r\n        const { intl, initDone } = this.props;\r\n        switch (text) {\r\n            case initDone && intl.get(\"Upload\"):\r\n                this.reUpload()\r\n                break;\r\n            case initDone && intl.get(\"Regnerate\"):\r\n                this.reGnerate()\r\n                break;\r\n            case initDone && intl.get(\"Download\"):\r\n                this.download()\r\n                break;\r\n            case initDone && intl.get(\"Edit\"):\r\n                this.editPage()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { intl, initDone, fileName } = this.props;\r\n        const { isDownloading } = this.state\r\n        //add your button here\r\n        const supportedButton = [\r\n            {\r\n                iconUrl: `${AliCloud}/upload_white.png`,\r\n                text: initDone && intl.get(\"Upload\")\r\n            },\r\n            {\r\n                iconUrl: `${AliCloud}/download/regenerate.png`,\r\n                text: initDone && intl.get(\"Regnerate\")\r\n            },\r\n            {\r\n                iconUrl: `${AliCloud}/download/download.png`,\r\n                text: initDone && intl.get(\"Download\")\r\n            },\r\n            {\r\n                iconUrl: `${AliCloud}/download/edit.png`,\r\n                text: initDone && intl.get(\"Edit\")\r\n            }\r\n        ]\r\n        return (\r\n            <CommonSlotView myClassName={\"toFactsheet\"} fileName={fileName} isSpining={isDownloading} columnCount={supportedButton.length} {...this.props}>\r\n                {\r\n                    supportedButton.map((button, index) => {\r\n                        return <ButtonBoxView key={\"index_\" + index} iconUrl={button.iconUrl} text={button.text} onClickListener={() => this.click(button.text)} />\r\n                    })\r\n                }\r\n            </CommonSlotView >\r\n        )\r\n    }\r\n}\r\n","export default {\r\n    GREEN: 'rgb(51, 111, 185)',\r\n    YELLOW: 'yellow',\r\n    BLUE: '#336fb9',\r\n    GRAY: 'lightgray',\r\n    BAR_BACK: '#222f3d',\r\n    BAR: '#6CD4FF',\r\n    BAR_HIGHTLIGHT: '#F6C02A',\r\n    AREA: '#ffce54',\r\n    LINE: '#ffce54',\r\n    BG_ABOVE: '#a1d469',\r\n    BG_BELOW: '#ed5463',\r\n    CONVERT: [\"#064969\", \"#E19788\", \"#D33346\", \"#96A7CE\", \"#B1CC70\", \"#4ECBC4\"]\r\n}","import React, { Suspense } from 'react'\r\nimport { Spin } from 'antd';\r\n// import OperationType from '@/constant/OperationType'\r\n// import ConvertType from '@/constant/ConvertType'\r\n// import ConvertForms from '@/constant/config'\r\n// import Fact from '@/model/fact'\r\n// import ToFactsheet from '@/components/Generate/ToFactsheet/ToFactsheet'\r\n// import Color from '@/constant/Color'\r\n// import ProgressBarView from '@/components/ProgressBar/ProgressBarView'\r\n// import config from '@/axios/config';\r\n// import * as api from '@/axios/api';\r\nimport OperationType from '../../constant/OperationType'\r\nimport ConvertType from '../../constant/ConvertType'\r\nimport ConvertForms from '../../constant/config'\r\nimport Fact from '../../model/fact'\r\nimport ToFactsheet from '../../components/Generate/ToFactsheet/ToFactsheet'\r\nimport Color from '../../constant/Color'\r\nimport ProgressBarView from '../../components/ProgressBar/ProgressBarView'\r\nimport config from '../../axios/config';\r\nimport * as api from '../../axios/api';\r\n\r\nimport './GeneratePannel.less';\r\n\r\n\r\nexport default class GeneratePannel extends React.Component {\r\n\r\n    state = {\r\n        operateState: this.props.operateState,\r\n        convertingType: ConvertForms[0]\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps.operateState !== this.props.operateState) {\r\n            this.setState({\r\n                operateState: nextProps.operateState\r\n            })\r\n        }\r\n    }\r\n    generate = (url) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            let fileName = this.props.fileName;\r\n            // this.props.generateStory([], [], '');\r\n            // this.props.updateProgress(this.props.maxStoryLength, this.props.maxStoryLength);//reset progress bar\r\n            // //setTimeout 8s\r\n            // let max_iteration = 8,\r\n            //     count = max_iteration;//inital\r\n\r\n            let timer = setInterval(() => {\r\n                if (count === 0) {\r\n                    clearInterval(timer)\r\n                    this.setState({\r\n                        operateState: OperationType.GENERATED\r\n                    })\r\n                    // this.props.history.push('/edit')\r\n                    this.props.history.push('/show')\r\n                }\r\n                count--;\r\n                this.props.updateProgress(max_iteration, count < 0 ? 0 : count);\r\n            }, 1500)\r\n\r\n            const { storyParameter } = this.props;\r\n\r\n            let data = {\r\n                file_name: fileName,\r\n                max_story_length: storyParameter.maxStoryLength\r\n            }\r\n            const response = await api.generate(url, data)\r\n            clearInterval(timer);\r\n            if (response.data.fail) {\r\n                this.setState({\r\n                    operateState: OperationType.FAILED,\r\n                    errorMessage: response.data.fail\r\n                })\r\n                reject();\r\n            }\r\n            if (response.data.error) {\r\n                this.setState({\r\n                    operateState: OperationType.FAILED,\r\n                    errorMessage: response.data.error\r\n                })\r\n                reject();\r\n            }\r\n            this.props.updateProgress(max_iteration, 0);//100%\r\n            this.setState({\r\n                operateState: OperationType.GENERATED\r\n            })\r\n            resolve(response)\r\n        })\r\n    }\r\n\r\n    getPannelClassName = () => {\r\n        const { operateState } = this.state;\r\n        switch (operateState) {\r\n            case OperationType.UPLOADED:\r\n                return \"pannelWithConvertType whitePannel\"\r\n            case OperationType.GENERATING:\r\n            case OperationType.GENERATED:\r\n                return \"draggerPannelCommon whitePannel\"\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    isShowProgressbar = () => {\r\n        const { operateState } = this.state\r\n        if (operateState === OperationType.GENERATING) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clickGenerate = (typeForm) => {\r\n        this.setState({\r\n            convertingType: typeForm,\r\n            operateState: OperationType.GENERATING\r\n        })\r\n        let type = typeForm.name\r\n        this.generate(config.url.generate).then(response => {\r\n            const facts = response.data.story.facts;\r\n            let tempFacts = [];\r\n            switch (type) {\r\n                default:\r\n                    for (let factDict of facts) {\r\n                        let fact = new Fact(\r\n                            factDict['type'],\r\n                            factDict['measure'],\r\n                            factDict['subspace'],\r\n                            factDict['groupby'],\r\n                            factDict['focus'],\r\n                            factDict['parameter'],\r\n                            \"\", // chart\r\n                            factDict['score'],\r\n                            factDict['information'],\r\n                            factDict['significance']\r\n                        )\r\n                        tempFacts.push(fact);\r\n                    }\r\n                    this.props.generateStory(tempFacts.slice(), [\r\n                        \"none\",\r\n                        \"similarity\",\r\n                        \"similarity\",\r\n                        \"similarity\",\r\n                        \"similarity\",\r\n                        \"similarity\"\r\n                    ], 1);\r\n                    // this.props.history.push('/edit')\r\n                    this.props.history.push('/show')\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { intl, initDone, generateProgress } = this.props;\r\n        const { operateState, convertingType } = this.state\r\n\r\n\r\n        const ConvertingArrow = ({ operateState }) => {\r\n            return (<div className=\"arrowLineDiv\" >\r\n                <p> {this.props.generateProgress + \"%\"}</p>\r\n                <div className=\"arrowLine\"></div>\r\n                {\r\n                    operateState === OperationType.GENERATED ?\r\n                        <p> {initDone && intl.get(\"Success\")}</p>\r\n                        :\r\n                        <p> {initDone && intl.get(\"Coverting\")}</p>\r\n                }\r\n            </div>)\r\n        }\r\n\r\n        const FileNameView = ({ fileName }) => {\r\n            return <div className='CSVFileImage'>\r\n                <div className='csvIconBlack'></div>\r\n                <span className=\"fileName\">{fileName}</span>\r\n            </div>\r\n        }\r\n\r\n        let PannelContentView;\r\n        switch (operateState) {\r\n            case OperationType.UPLOADED:\r\n                PannelContentView = <>\r\n                    <div style={{ height: \"340px\", flex: 1 }}>\r\n                        <div className='pannel-box'>\r\n                            <FileNameView fileName={this.props.fileName} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='ConvertFormsDiv' style={{ columnCount: Math.ceil(ConvertForms.length / 2) }}>\r\n                        {\r\n                            ConvertForms.map((type, idx) => {\r\n                                return <div className='convert-box'\r\n                                    key={idx}\r\n                                    style={{ height: ConvertForms.length === 1 ? \"100%\" : \"50%\", backgroundColor: Color.CONVERT[idx] }}\r\n                                    onClick={() => this.clickGenerate(type)}>\r\n                                    <div className='icon'\r\n                                        style={{ backgroundImage: `url(${type.iconUrl})` }}\r\n                                    />\r\n                                    <span>{initDone && intl.get(`To${type.name}`)}</span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                        {\r\n                            ConvertForms.length !== 1 && ConvertForms.length % 2 !== 0 ?\r\n                                <div style={{ height: \"50%\", visibility: \"none\", backgroundColor: \"transparent\" }}></div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </>\r\n                break;\r\n            case OperationType.GENERATING:\r\n                PannelContentView = <div style={{ height: \"340px\", flex: 1 }}>\r\n                    <div className='pannel-box'>\r\n                        <div style={{ display: 'flex' }}>\r\n                            {/* <FileNameView fileName={this.props.fileName} /> */}\r\n                            <div className='JSONFileImage'>\r\n                                <div className='jsonIconBlack'></div>\r\n                                <span className=\"fileName\">比赛数据</span>\r\n                            </div>\r\n                            <div className='MP4FileImage'>\r\n                                <div className='mp4IconBlack'></div>\r\n                                <span className=\"fileName\">比赛视频</span>\r\n                            </div>\r\n                            <div className='VHCenter'>\r\n                                <ConvertingArrow operateState={operateState} {...this.props} />\r\n                                <div className='CSVFileImage'>\r\n                                    <div className='GenerateIcon'\r\n                                        style={{ backgroundImage: `url(${convertingType.generateIconUrl})` }}\r\n                                    />\r\n                                    <span className=\"fileName\">比赛快报</span>\r\n                                    {/* <span className='fileName'>{initDone && intl.get(`To${convertingType.name}`)}</span> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                break;\r\n            case OperationType.PUBLISHED:\r\n                const Loading = () => {\r\n                    return (<div style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', marginTop: \"50px\" }}>\r\n                        <Spin />\r\n                    </div>)\r\n                }\r\n                //dynamic load the supported button view according to the convert type\r\n                let GeneratedPannel;\r\n                switch (convertingType.name) {\r\n                    case ConvertType.FACTSHEET:\r\n                        GeneratedPannel = <ToFactsheet reGnerate={this.clickGenerate}  {...this.props} />\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                PannelContentView = <div style={{ height: \"340px\", flex: 1 }}>\r\n                    <div className='pannel-box'>\r\n                        <div style={{ display: 'flex', flexDirection: \"column\", alignItems: \"center\", height: \"100%\" }}>\r\n                            <Suspense fallback={<Loading />}>\r\n                                {GeneratedPannel}\r\n                            </Suspense>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return <div className={this.getPannelClassName()}>\r\n            <ProgressBarView percent={generateProgress} isActive={this.isShowProgressbar()} />\r\n            {\r\n                PannelContentView\r\n            }\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react'\r\n// import OperationType from '@/constant/OperationType'\r\n\r\n// import UploadPannel from '@/components/Upload/UploadPannel'\r\n// import GeneratePannel from '@/components/Generate/GeneratePannel'\r\nimport OperationType from '../../../constant/OperationType'\r\n\r\nimport UploadPannel from '../../../components/Upload/UploadPannel'\r\nimport GeneratePannel from '../../../components/Generate/GeneratePannel'\r\nimport './PannelView.less'\r\n\r\n/***上传与生成组件****/\r\nexport default class PannelView extends Component {\r\n    handleGetDataIndex = (index) => {\r\n        console.log(\"PannelView uuid index\")\r\n        console.log(index)\r\n        // this.setState({\r\n        //     dataIndex : index\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        const { intl, initDone, operateState } = this.props;\r\n        let PannelView;\r\n        switch (operateState) {\r\n            //upload module\r\n            case OperationType.BEFORE_UPLOAD:\r\n            case OperationType.UPLOADIND:\r\n            case OperationType.FAILED:\r\n            case OperationType.FILE_LARGE:\r\n            case OperationType.JSONUPLOADED:\r\n                PannelView = <UploadPannel getDataIndex={this.handleGetDataIndex} operateState={operateState} {...this.props} />\r\n                // console.log(\"this.state.dataIndex\")\r\n                // console.log(this.state.dataIndex)\r\n                break;\r\n            //generate module\r\n            case OperationType.UPLOADED:\r\n            case OperationType.GENERATING:\r\n            case OperationType.PUBLISHED:\r\n                PannelView = <GeneratePannel operateState={operateState} {...this.props} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return <div>\r\n            {\r\n                PannelView\r\n            }\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Layout, Divider } from 'antd';\r\nimport \"./ContentView.less\";\r\n\r\nexport default class ContentView extends React.Component {\r\n\r\n    render() {\r\n        const { intl, initDone } = this.props;\r\n\r\n        const SloganView = () => {\r\n            return (\r\n                <div>\r\n                    <div style={{ height: \"140px\"}} className='slogan'>\r\n                        <span >国家乒乓球队大数据平台</span>\r\n                    </div>\r\n                    <div style={{ position: 'relative', width: '100%', height: '1px' }}>\r\n                        <div className='decorationImage'></div>\r\n                        <div className='customDivider'></div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        };\r\n\r\n        const BelowPannel = () => {\r\n            return (\r\n                <div className='belowPannel'>\r\n                    <div className=\"cloumnDiv\">\r\n                        <div className=\"icon5 iconSize\"></div>\r\n                        <span>{initDone && intl.get(\"5\")}</span>\r\n                        <span>{initDone && intl.get(\"51\")}</span>\r\n                    </div>\r\n                    <div className=\"cloumnDiv\">\r\n                        <div className=\"icon2 iconSize\"></div>\r\n                        <span>{initDone && intl.get(\"2\")}</span>\r\n                        <span>{initDone && intl.get(\"21\")}</span>\r\n                    </div>\r\n                    <div className=\"cloumnDiv\">\r\n                        <div className=\"icon3 iconSize\"></div>\r\n                        <span>{initDone && intl.get(\"3\")}</span>\r\n                        <span>{initDone && intl.get(\"31\")}</span>\r\n                    </div>\r\n                    <div className=\"cloumnDiv\" >\r\n                        <div className=\"icon4 iconSize\"></div>\r\n                        <span>{initDone && intl.get(\"4\")}</span>\r\n                        <span>{initDone && intl.get(\"41\")}</span>\r\n                    </div>\r\n                    <div className=\"cloumnDiv\">\r\n                        <div className=\"icon1 iconSize\"></div>\r\n                        <span >{initDone && intl.get(\"1\")}</span>\r\n                        <span>{initDone && intl.get(\"11\")}</span>\r\n                    </div>\r\n                    <div className=\"cloumnDiv\">\r\n                        <div className=\"icon6 iconSize\"></div>\r\n                        <span>{initDone && intl.get(\"6\")}</span>\r\n                        <span>{initDone && intl.get(\"61\")}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        };\r\n        const HowtoConvert = () => {\r\n            return (\r\n                <div className=\"howtoConvert\">\r\n                    <div></div>\r\n                    <div >\r\n                        <span>{initDone && intl.get(\"Howtoconvert\")}</span>\r\n                        <span>{initDone && intl.get(\"step1\")}</span>\r\n                        <span>{initDone && intl.get(\"step2\")}</span>\r\n                        <span>{initDone && intl.get(\"step3\")}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        };\r\n        return (\r\n            <div className='ContentView' >\r\n                <SloganView />\r\n                <Layout style={{ marginTop: \"23px\", width: \"100%\", backgroundColor: \"white\" }}>\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                    {/* <BelowPannel {...this.props} /> */}\r\n                    <Divider style={{ backgroundColor: \"#979797\", marginTop: \"15px\", marginBottom: \"0px\"}} />\r\n                    {/* <HowtoConvert {...this.props} /> */}\r\n                    <div className='TopicImage'>\r\n                        <div></div>\r\n                    </div>\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Divider } from \"antd\";\r\nimport HeadBarView from \"../../components/HeadBar/index\";\r\nimport ContentView from \"./Content/ContentView\";\r\nimport PannelView from \"./PannelView/index\";\r\nimport \"./Homepage.less\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nexport default class Homepage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{position:'relative'}}>\r\n                <Header style={{ height: \"50px\" }}>\r\n                    <HeadBarView isLogIn={false} {...this.props} />\r\n                </Header>\r\n                <Divider className=\"customDivider\" />\r\n                <Content className=\"pageWrapper\">\r\n                    <ContentView {...this.props}>\r\n                        <PannelView {...this.props}></PannelView>\r\n                    </ContentView>\r\n                </Content>\r\n                <div className='bottomTip'>\r\n                    <div className='logo'></div>\r\n                    <span>Powered By Calliope</span>\r\n                </div>\r\n            </Layout >\r\n        )\r\n    }\r\n}"],"sourceRoot":""}