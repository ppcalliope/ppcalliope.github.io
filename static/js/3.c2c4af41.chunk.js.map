{"version":3,"sources":["../node_modules/antd/es/form/context.js","../node_modules/rc-util/es/Children/toArray.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/rc-field-form/es/FieldContext.js","../node_modules/rc-field-form/es/utils/typeUtil.js","../node_modules/rc-field-form/es/utils/messages.js","../node_modules/rc-util/es/utils/get.js","../node_modules/rc-util/es/utils/set.js","../node_modules/rc-field-form/es/utils/cloneDeep.js","../node_modules/rc-field-form/es/utils/valueUtil.js","../node_modules/rc-field-form/es/utils/validateUtil.js","../node_modules/rc-field-form/es/Field.js","../node_modules/rc-field-form/es/ListContext.js","../node_modules/rc-field-form/es/List.js","../node_modules/rc-field-form/es/utils/NameMap.js","../node_modules/rc-field-form/es/useForm.js","../node_modules/rc-field-form/es/utils/asyncUtil.js","../node_modules/rc-field-form/es/FormContext.js","../node_modules/rc-field-form/es/Form.js","../node_modules/rc-field-form/es/useWatch.js","../node_modules/rc-field-form/es/index.js","../../../src/util.ts","../../../src/rule/required.ts","../../../src/rule/url.ts","../../../src/rule/type.ts","../../../src/rule/index.ts","../../../src/rule/whitespace.ts","../../../src/rule/range.ts","../../../src/rule/enum.ts","../../../src/rule/pattern.ts","../../../src/validator/type.ts","../../../src/validator/index.ts","../../../src/validator/string.ts","../../../src/validator/method.ts","../../../src/validator/number.ts","../../../src/validator/boolean.ts","../../../src/validator/regexp.ts","../../../src/validator/integer.ts","../../../src/validator/float.ts","../../../src/validator/array.ts","../../../src/validator/object.ts","../../../src/validator/enum.ts","../../../src/validator/pattern.ts","../../../src/validator/date.ts","../../../src/validator/required.ts","../../../src/validator/any.ts","../../../src/messages.ts","../../../src/index.ts"],"names":["FormItemInputContext","React","NoFormStyle","_ref","children","status","override","formItemInputContext","useContext","newFormItemInputContext","useMemo","newContext","_extends","isFormItemInput","hasFeedback","feedbackIcon","Provider","value","toArray","option","arguments","length","undefined","ret","Children","forEach","child","keepEmpty","Array","isArray","concat","isFragment","props","push","_toArray","arr","HOOK_MARK","warningFunc","warning","Context","getFieldValue","getFieldsValue","getFieldError","getFieldWarning","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldValue","setFieldsValue","validateFields","submit","getInternalHooks","dispatch","initEntityValue","registerField","useSubscribe","setInitialValues","destroyForm","setCallbacks","registerWatch","getFields","setValidateMessages","setPreserve","getInitialValue","typeTemplate","defaultValidateMessages","default","required","enum","whitespace","date","format","parse","invalid","types","string","method","array","object","number","boolean","integer","float","regexp","email","url","hex","len","min","max","range","pattern","mismatch","get","entity","path","current","i","internalSet","paths","removeIfUndefined","clone","_paths","restPath","slice","_toConsumableArray","_objectSpread","set","cloneDeep","val","map","item","cloneArrayDeep","_typeof","Object","getPrototypeOf","prototype","res","key","cloneObjectDeep","getNamePath","getValue","store","namePath","setValue","newStore","cloneByNamePathList","namePathList","containsNamePath","some","matchNamePath","isObject","obj","internalSetValues","values","keys","prevValue","recursive","setValues","_len","restValues","_key","reduce","changedNamePath","every","nameUnit","defaultGetValueFromEvent","valuePropName","event","target","move","moveIndex","toIndex","diff","AsyncValidator","RawAsyncValidator","replaceMessage","template","kv","replace","str","validateRule","_x","_x2","_x3","_x4","_x5","_validateRule","apply","this","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","name","rule","options","messageVariables","cloneRule","originValidator","subRuleField","validator","messages","result","subResults","fillVariableResult","wrap","_context2","prev","next","ruleIndex","error","console","Promise","reject","type","defaultField","_defineProperty","validateMessages","resolve","validate","t0","errors","_ref4","index","message","mergedMessage","all","subValue","sent","abrupt","join","stop","validateRules","rules","validateFirst","summaryPromise","filledRules","currentRule","originValidatorFunc","callback","hasPromise","promise","args","then","catch","err","sort","_ref2","w1","warningOnly","i1","w2","i2","_ref3","_callee","_context","_x6","_x7","rulePromises","_x9","_finishOnFirstFailed","finishOnFirstFailed","_x8","_finishOnAllFailed","finishOnAllFailed","e","_callee3","_context3","errorsList","_ref5","_callee4","count","_context4","ruleError","_excluded","EMPTY_ERRORS","requireUpdate","shouldUpdate","nextValue","info","source","Field","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","resetCount","cancelRegisterFunc","mounted","touched","dirty","validatePromise","prevValidating","warnings","cancelRegister","_this$props","preserve","isListField","_this$props2","_fieldContext$prefixN","fieldContext","prefixName","getRules","_this$props3","_this$props3$rules","refresh","setState","triggerMetaEvent","destroy","onMetaChange","getMeta","onStoreChange","prevStore","_this$props4","_this$props4$dependen","dependencies","onReset","curValue","namePathMatch","reRender","data","validating","dependency","relatedFields","currentValue","rootPromise","_this$props5","_this$props5$validate","triggerName","filteredRules","filter","validateTrigger","includes","ruleErrors","_ruleErrors$forEach","nextErrors","nextWarnings","_ref3$errors","isFieldDirty","initialValue","getErrors","getWarnings","isList","isPreserve","getOnlyChild","meta","getControlled","isFunction","childList","toChildrenArray","childProps","_this$props6","trigger","getValueFromEvent","normalize","getValueProps","mergedValidateTrigger","_getInternalHooks","mergedGetValueProps","originTriggerFunc","control","newValue","validateTriggerList","originTrigger","_assertThisInitialized","_createClass","_this$props7","forceUpdate","returnChildNode","_this$getOnlyChild","contextType","FieldContext","defaultProps","WrapperField","restProps","_objectWithoutProperties","ListContext","List","context","keyManager","id","parentPrefixName","listContext","getKey","pathName","_ref3$value","onChange","getNewValue","operations","add","defaultValue","remove","indexSet","Set","size","_","keysIndex","has","valueIndex","from","to","_move","listValue","__","SPLIT","cell","NameMap","kvs","Map","updater","delete","entries","_slicedToArray","cells","split","_cell$match","match","_cell$match2","unit","Number","json","FormStore","forceRootUpdate","formHooked","subscribable","fieldEntities","initialValues","callbacks","lastValidatePromise","getForm","_init","prevWithoutPreserves","init","_this$prevWithoutPres","nextStore","updateStore","getFieldEntities","isMergedPreserve","initValue","watchList","fn","notifyWatch","timeoutId","warningUnhooked","process","pure","field","getFieldsMap","cache","getFieldEntitiesForNamePathList","nameList","INVALIDATE_NAME_PATH","filterFunc","filteredNameList","_entity$isListField","arg0","arg1","isAllFieldsTouched","shortNamePath","fieldNamePath","update","list","isNamePathListTouched","entities","namePathListEntities","testField","resetWithFieldInitialValue","records","requiredFieldEntities","resetWithFields","originValue","skipExist","_requiredFieldEntitie","r","notifyObservers","fields","fieldData","defineProperty","fieldPreserve","mergedPreserve","subNamePath","_prevStore","triggerDependenciesUpdate","action","updateValue","_namePath","mergedInfo","childrenFields","getDependencyChildrenFields","onValuesChange","triggerOnFieldsChange","rootNamePath","dependencies2fields","dependencyNamePath","fillChildren","filedErrors","onFieldsChange","fieldName","provideNameList","promiseList","mergedErrors","mergedWarnings","_ref6","hasError","results","allPromiseFinish","resultNamePathList","_ref7","returnPromise","errorList","errorFields","outOfDate","onFinish","onFinishFailed","useForm","form","formRef","_React$useState","formStore","FormContext","triggerFormChange","triggerFormFinish","registerForm","unregisterForm","FormProvider","onFormChange","onFormFinish","formContext","formsRef","changedFields","forms","newForms","Form","ref","_ref$component","component","Component","_ref$validateTrigger","_onFieldsChange","_onFinish","_useForm","formInstance","_formInstance$getInte","rest","childrenNode","mountRef","childrenRenderProps","prevFieldsRef","sourceKeys","targetKeys","sourceValue","targetValue","isSimilar","formContextValue","wrapperNode","onSubmit","preventDefault","stopPropagation","_restProps$onReset","stringify","JSON","Math","random","useWatch","_useState","useState","_useState2","valueStr","valueStrRef","useRef","isValidForm","namePathRef","useEffect","nextValueStr","RefForm","FieldForm","formatRegExp","convertFieldsError","x","String","isEmptyValue","isNativeStringType","asyncSerialArray","func","arrLength","original","AsyncValidationError","asyncMap","pending","objArr","k","flattenObjArr","firstFields","objArrKeys","objArrLength","total","a","asyncParallelArray","complementError","fieldValue","v","oe","fullField","deepMerge","parseInt","RegExp","isNaN","urlReg","b","v4","v6seg","v6","v46Exact","v4exact","v6exact","ip","ipv4","ipv6","protocol","getUrlRegex","test","ruleType","custom","num","_pattern","dateObject","Date","any","newMessages","cloned","Schema","_messages","defaultMessages","define","descriptor","Error","o","oc","series","z","deep","addFullField","fullFields","cb","filledErrors","doIt","fieldsSchema","paredFieldsSchema","fieldSchema","fieldSchemaList","schema","errs","finalErrors","setTimeout","complete","getType","validators","getValidationMethod","messageIndex","register"],"mappings":"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","file":"static/js/3.c2c4af41.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nexport var FormContext = /*#__PURE__*/React.createContext({\n  labelAlign: 'right',\n  vertical: false,\n  itemRef: function itemRef() {}\n});\nexport var NoStyleItemContext = /*#__PURE__*/React.createContext(null);\nexport var FormProvider = function FormProvider(props) {\n  var providerProps = omit(props, ['prefixCls']);\n  return /*#__PURE__*/React.createElement(RcFormProvider, _extends({}, providerProps));\n};\nexport var FormItemPrefixContext = /*#__PURE__*/React.createContext({\n  prefixCls: ''\n});\nexport var FormItemInputContext = /*#__PURE__*/React.createContext({});\nexport var NoFormStyle = function NoFormStyle(_ref) {\n  var children = _ref.children,\n      status = _ref.status,\n      override = _ref.override;\n  var formItemInputContext = useContext(FormItemInputContext);\n  var newFormItemInputContext = useMemo(function () {\n    var newContext = _extends({}, formItemInputContext);\n\n    if (override) {\n      delete newContext.isFormItemInput;\n    }\n\n    if (status) {\n      delete newContext.status;\n      delete newContext.hasFeedback;\n      delete newContext.feedbackIcon;\n    }\n\n    return newContext;\n  }, [status, override, formItemInputContext]);\n  return /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: newFormItemInputContext\n  }, children);\n};","import React from 'react';\nimport { isFragment } from 'react-is';\nexport default function toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  React.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if (isFragment(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nexport var HOOK_MARK = 'RC_FORM_INTERNAL_HOOKS'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar warningFunc = function warningFunc() {\n  warning(false, 'Can not find FormContext. Please make sure you wrap Field under Form.');\n};\n\nvar Context = /*#__PURE__*/React.createContext({\n  getFieldValue: warningFunc,\n  getFieldsValue: warningFunc,\n  getFieldError: warningFunc,\n  getFieldWarning: warningFunc,\n  getFieldsError: warningFunc,\n  isFieldsTouched: warningFunc,\n  isFieldTouched: warningFunc,\n  isFieldValidating: warningFunc,\n  isFieldsValidating: warningFunc,\n  resetFields: warningFunc,\n  setFields: warningFunc,\n  setFieldValue: warningFunc,\n  setFieldsValue: warningFunc,\n  validateFields: warningFunc,\n  submit: warningFunc,\n  getInternalHooks: function getInternalHooks() {\n    warningFunc();\n    return {\n      dispatch: warningFunc,\n      initEntityValue: warningFunc,\n      registerField: warningFunc,\n      useSubscribe: warningFunc,\n      setInitialValues: warningFunc,\n      destroyForm: warningFunc,\n      setCallbacks: warningFunc,\n      registerWatch: warningFunc,\n      getFields: warningFunc,\n      setValidateMessages: warningFunc,\n      setPreserve: warningFunc,\n      getInitialValue: warningFunc\n    };\n  }\n});\nexport default Context;","export function toArray(value) {\n  if (value === undefined || value === null) {\n    return [];\n  }\n\n  return Array.isArray(value) ? value : [value];\n}","var typeTemplate = \"'${name}' is not a valid ${type}\";\nexport var defaultValidateMessages = {\n  default: \"Validation error on field '${name}'\",\n  required: \"'${name}' is required\",\n  enum: \"'${name}' must be one of [${enum}]\",\n  whitespace: \"'${name}' cannot be empty\",\n  date: {\n    format: \"'${name}' is invalid for format date\",\n    parse: \"'${name}' could not be parsed as date\",\n    invalid: \"'${name}' is invalid date\"\n  },\n  types: {\n    string: typeTemplate,\n    method: typeTemplate,\n    array: typeTemplate,\n    object: typeTemplate,\n    number: typeTemplate,\n    date: typeTemplate,\n    boolean: typeTemplate,\n    integer: typeTemplate,\n    float: typeTemplate,\n    regexp: typeTemplate,\n    email: typeTemplate,\n    url: typeTemplate,\n    hex: typeTemplate\n  },\n  string: {\n    len: \"'${name}' must be exactly ${len} characters\",\n    min: \"'${name}' must be at least ${min} characters\",\n    max: \"'${name}' cannot be longer than ${max} characters\",\n    range: \"'${name}' must be between ${min} and ${max} characters\"\n  },\n  number: {\n    len: \"'${name}' must equal ${len}\",\n    min: \"'${name}' cannot be less than ${min}\",\n    max: \"'${name}' cannot be greater than ${max}\",\n    range: \"'${name}' must be between ${min} and ${max}\"\n  },\n  array: {\n    len: \"'${name}' must be exactly ${len} in length\",\n    min: \"'${name}' cannot be less than ${min} in length\",\n    max: \"'${name}' cannot be greater than ${max} in length\",\n    range: \"'${name}' must be between ${min} and ${max} in length\"\n  },\n  pattern: {\n    mismatch: \"'${name}' does not match pattern ${pattern}\"\n  }\n};","export default function get(entity, path) {\n  var current = entity;\n\n  for (var i = 0; i < path.length; i += 1) {\n    if (current === null || current === undefined) {\n      return undefined;\n    }\n\n    current = current[path[i]];\n  }\n\n  return current;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport get from './get';\n\nfunction internalSet(entity, paths, value, removeIfUndefined) {\n  if (!paths.length) {\n    return value;\n  }\n\n  var _paths = _toArray(paths),\n      path = _paths[0],\n      restPath = _paths.slice(1);\n\n  var clone;\n\n  if (!entity && typeof path === 'number') {\n    clone = [];\n  } else if (Array.isArray(entity)) {\n    clone = _toConsumableArray(entity);\n  } else {\n    clone = _objectSpread({}, entity);\n  } // Delete prop if `removeIfUndefined` and value is undefined\n\n\n  if (removeIfUndefined && value === undefined && restPath.length === 1) {\n    delete clone[path][restPath[0]];\n  } else {\n    clone[path] = internalSet(clone[path], restPath, value, removeIfUndefined);\n  }\n\n  return clone;\n}\n\nexport default function set(entity, paths, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // Do nothing if `removeIfUndefined` and parent object not exist\n  if (paths.length && removeIfUndefined && value === undefined && !get(entity, paths.slice(0, -1))) {\n    return entity;\n  }\n\n  return internalSet(entity, paths, value, removeIfUndefined);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nfunction cloneDeep(val) {\n  if (Array.isArray(val)) {\n    return cloneArrayDeep(val);\n  } else if (_typeof(val) === 'object' && val !== null) {\n    return cloneObjectDeep(val);\n  }\n\n  return val;\n}\n\nfunction cloneObjectDeep(val) {\n  if (Object.getPrototypeOf(val) === Object.prototype) {\n    var res = {};\n\n    for (var key in val) {\n      res[key] = cloneDeep(val[key]);\n    }\n\n    return res;\n  }\n\n  return val;\n}\n\nfunction cloneArrayDeep(val) {\n  return val.map(function (item) {\n    return cloneDeep(item);\n  });\n}\n\nexport default cloneDeep;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { toArray } from './typeUtil';\nimport cloneDeep from '../utils/cloneDeep';\n/**\n * Convert name to internal supported format.\n * This function should keep since we still thinking if need support like `a.b.c` format.\n * 'a' => ['a']\n * 123 => [123]\n * ['a', 123] => ['a', 123]\n */\n\nexport function getNamePath(path) {\n  return toArray(path);\n}\nexport function getValue(store, namePath) {\n  var value = get(store, namePath);\n  return value;\n}\nexport function setValue(store, namePath, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var newStore = set(store, namePath, value, removeIfUndefined);\n  return newStore;\n}\nexport function cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = getValue(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nexport function containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(path, namePath);\n  });\n}\n\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\n/**\n * Copy values into store and return a new values object\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\n */\n\n\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread({}, store);\n\n  if (!values) {\n    return newStore;\n  }\n\n  Object.keys(values).forEach(function (key) {\n    var prevValue = newStore[key];\n    var value = values[key]; // If both are object (but target is not array), we use recursion to set deep value\n\n    var recursive = isObject(prevValue) && isObject(value);\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : cloneDeep(value); // Clone deep for arrays\n  });\n  return newStore;\n}\n\nexport function setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n\n  return restValues.reduce(function (current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nexport function matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n\n  return namePath.every(function (nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}\nexport function isSimilar(source, target) {\n  if (source === target) {\n    return true;\n  }\n\n  if (!source && target || source && !target) {\n    return false;\n  }\n\n  if (!source || !target || _typeof(source) !== 'object' || _typeof(target) !== 'object') {\n    return false;\n  }\n\n  var sourceKeys = Object.keys(source);\n  var targetKeys = Object.keys(target);\n  var keys = new Set([].concat(sourceKeys, targetKeys));\n  return _toConsumableArray(keys).every(function (key) {\n    var sourceValue = source[key];\n    var targetValue = target[key];\n\n    if (typeof sourceValue === 'function' && typeof targetValue === 'function') {\n      return true;\n    }\n\n    return sourceValue === targetValue;\n  });\n}\nexport function defaultGetValueFromEvent(valuePropName) {\n  var event = arguments.length <= 1 ? undefined : arguments[1];\n\n  if (event && event.target && _typeof(event.target) === 'object' && valuePropName in event.target) {\n    return event.target[valuePropName];\n  }\n\n  return event;\n}\n/**\n * Moves an array item from one position in an array to another.\n *\n * Note: This is a pure function so a new array will be returned, instead\n * of altering the array argument.\n *\n * @param array         Array in which to move an item.         (required)\n * @param moveIndex     The index of the item to move.          (required)\n * @param toIndex       The index to move item at moveIndex to. (required)\n */\n\nexport function move(array, moveIndex, toIndex) {\n  var length = array.length;\n\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\n    return array;\n  }\n\n  var item = array[moveIndex];\n  var diff = moveIndex - toIndex;\n\n  if (diff > 0) {\n    // move left\n    return [].concat(_toConsumableArray(array.slice(0, toIndex)), [item], _toConsumableArray(array.slice(toIndex, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, length)));\n  }\n\n  if (diff < 0) {\n    // move right\n    return [].concat(_toConsumableArray(array.slice(0, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array.slice(toIndex + 1, length)));\n  }\n\n  return array;\n}","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/esm/regeneratorRuntime\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport RawAsyncValidator from 'async-validator';\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { defaultValidateMessages } from './messages';\nimport { setValues } from './valueUtil'; // Remove incorrect original ts define\n\nvar AsyncValidator = RawAsyncValidator;\n/**\n * Replace with template.\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\n */\n\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\n    var key = str.slice(2, -1);\n    return kv[key];\n  });\n}\n\nvar CODE_LOGIC_ERROR = 'CODE_LOGIC_ERROR';\n\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\n/**\n * We use `async-validator` to validate the value.\n * But only check one value in a time to avoid namePath validate issue.\n */\n\n\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name, value, rule, options, messageVariables) {\n    var cloneRule, originValidator, subRuleField, validator, messages, result, subResults, kv, fillVariableResult;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cloneRule = _objectSpread({}, rule); // Bug of `async-validator`\n            // https://github.com/react-component/field-form/issues/316\n            // https://github.com/react-component/field-form/issues/313\n\n            delete cloneRule.ruleIndex;\n\n            if (cloneRule.validator) {\n              originValidator = cloneRule.validator;\n\n              cloneRule.validator = function () {\n                try {\n                  return originValidator.apply(void 0, arguments);\n                } catch (error) {\n                  console.error(error);\n                  return Promise.reject(CODE_LOGIC_ERROR);\n                }\n              };\n            } // We should special handle array validate\n\n\n            subRuleField = null;\n\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\n            messages = setValues({}, defaultValidateMessages, options.validateMessages);\n            validator.messages(messages);\n            result = [];\n            _context2.prev = 9;\n            _context2.next = 12;\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\n\n          case 12:\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](9);\n\n            if (_context2.t0.errors) {\n              result = _context2.t0.errors.map(function (_ref4, index) {\n                var message = _ref4.message;\n                var mergedMessage = message === CODE_LOGIC_ERROR ? messages.default : message;\n                return /*#__PURE__*/React.isValidElement(mergedMessage) ?\n                /*#__PURE__*/\n                // Wrap ReactNode with `key`\n                React.cloneElement(mergedMessage, {\n                  key: \"error_\".concat(index)\n                }) : mergedMessage;\n              });\n            }\n\n          case 17:\n            if (!(!result.length && subRuleField)) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 20;\n            return Promise.all(value.map(function (subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n\n          case 20:\n            subResults = _context2.sent;\n            return _context2.abrupt(\"return\", subResults.reduce(function (prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n\n          case 22:\n            // Replace message with variables\n            kv = _objectSpread(_objectSpread({}, rule), {}, {\n              name: name,\n              enum: (rule.enum || []).join(', ')\n            }, messageVariables);\n            fillVariableResult = result.map(function (error) {\n              if (typeof error === 'string') {\n                return replaceMessage(error, kv);\n              }\n\n              return error;\n            });\n            return _context2.abrupt(\"return\", fillVariableResult);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[9, 14]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\n\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\n  var name = namePath.join('.'); // Fill rule with context\n\n  var filledRules = rules.map(function (currentRule, ruleIndex) {\n    var originValidatorFunc = currentRule.validator;\n\n    var cloneRule = _objectSpread(_objectSpread({}, currentRule), {}, {\n      ruleIndex: ruleIndex\n    }); // Replace validator if needed\n\n\n    if (originValidatorFunc) {\n      cloneRule.validator = function (rule, val, callback) {\n        var hasPromise = false; // Wrap callback only accept when promise not provided\n\n        var wrappedCallback = function wrappedCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          // Wait a tick to make sure return type is a promise\n          Promise.resolve().then(function () {\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\n\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        }; // Get promise\n\n\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n        /**\n         * 1. Use promise as the first priority.\n         * 2. If promise not exist, use callback with warning instead\n         */\n\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\n\n        if (hasPromise) {\n          promise.then(function () {\n            callback();\n          }).catch(function (err) {\n            callback(err || ' ');\n          });\n        }\n      };\n    }\n\n    return cloneRule;\n  }).sort(function (_ref, _ref2) {\n    var w1 = _ref.warningOnly,\n        i1 = _ref.ruleIndex;\n    var w2 = _ref2.warningOnly,\n        i2 = _ref2.ruleIndex;\n\n    if (!!w1 === !!w2) {\n      // Let keep origin order\n      return i1 - i2;\n    }\n\n    if (w1) {\n      return 1;\n    }\n\n    return -1;\n  }); // Do validate rules\n\n  var summaryPromise;\n\n  if (validateFirst === true) {\n    // >>>>> Validate by serialization\n    summaryPromise = new Promise( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve, reject) {\n        var i, rule, errors;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < filledRules.length)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                rule = filledRules[i];\n                _context.next = 5;\n                return validateRule(name, value, rule, options, messageVariables);\n\n              case 5:\n                errors = _context.sent;\n\n                if (!errors.length) {\n                  _context.next = 9;\n                  break;\n                }\n\n                reject([{\n                  errors: errors,\n                  rule: rule\n                }]);\n                return _context.abrupt(\"return\");\n\n              case 9:\n                i += 1;\n                _context.next = 1;\n                break;\n\n              case 12:\n                /* eslint-enable */\n                resolve([]);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } else {\n    // >>>>> Validate by parallel\n    var rulePromises = filledRules.map(function (rule) {\n      return validateRule(name, value, rule, options, messageVariables).then(function (errors) {\n        return {\n          errors: errors,\n          rule: rule\n        };\n      });\n    });\n    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\n      // Always change to rejection for Field to catch\n      return Promise.reject(errors);\n    });\n  } // Internal catch error to avoid console error log.\n\n\n  summaryPromise.catch(function (e) {\n    return e;\n  });\n  return summaryPromise;\n}\n\nfunction finishOnAllFailed(_x8) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(rulePromises) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\n              var _ref5;\n\n              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));\n\n              return errors;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction finishOnFirstFailed(_x9) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\n\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(rulePromises) {\n    var count;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            count = 0;\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              rulePromises.forEach(function (promise) {\n                promise.then(function (ruleError) {\n                  if (ruleError.errors.length) {\n                    resolve([ruleError]);\n                  }\n\n                  count += 1;\n\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"name\"];\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\nvar EMPTY_ERRORS = [];\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field);\n\n  /**\n   * Follow state should not management in State since it will async update by React.\n   * This makes first render of form can not get correct state value.\n   */\n\n  /**\n   * Mark when touched & validated. Currently only used for `dependencies`.\n   * Note that we do not think field with `initialValue` is dirty\n   * but this will be by `isFieldDirty` func.\n   */\n  // ============================== Subscriptions ==============================\n  function Field(props) {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.call(this, props); // Register on init\n\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    _this.touched = false;\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.prevValidating = void 0;\n    _this.errors = EMPTY_ERRORS;\n    _this.warnings = EMPTY_ERRORS;\n\n    _this.cancelRegister = function () {\n      var _this$props = _this.props,\n          preserve = _this$props.preserve,\n          isListField = _this$props.isListField,\n          name = _this$props.name;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n\n      _this.cancelRegisterFunc = null;\n    };\n\n    _this.getNamePath = function () {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props3 = _this.props,\n          _this$props3$rules = _this$props3.rules,\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n          fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (!_this.mounted) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    };\n\n    _this.triggerMetaEvent = function (destroy) {\n      var onMetaChange = _this.props.onMetaChange;\n      onMetaChange === null || onMetaChange === void 0 ? void 0 : onMetaChange(_objectSpread(_objectSpread({}, _this.getMeta()), {}, {\n        destroy: destroy\n      }));\n    };\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n          shouldUpdate = _this$props4.shouldUpdate,\n          _this$props4$dependen = _this$props4.dependencies,\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n          onReset = _this$props4.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = EMPTY_ERRORS;\n        _this.warnings = EMPTY_ERRORS;\n\n        _this.triggerMetaEvent();\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = EMPTY_ERRORS;\n            _this.warnings = EMPTY_ERRORS;\n\n            _this.triggerMetaEvent();\n\n            onReset === null || onReset === void 0 ? void 0 : onReset();\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        /**\n         * In case field with `preserve = false` nest deps like:\n         * - A = 1 => show B\n         * - B = 1 => show C\n         * - Reset A, need clean B, C\n         */\n\n        case 'remove':\n          {\n            if (shouldUpdate) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || EMPTY_ERRORS;\n              }\n\n              if ('warnings' in data) {\n                _this.warnings = data.warnings || EMPTY_ERRORS;\n              }\n\n              _this.dirty = true;\n\n              _this.triggerMetaEvent();\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\n\n\n      var rootPromise = Promise.resolve().then(function () {\n        if (!_this.mounted) {\n          return [];\n        }\n\n        var _this$props5 = _this.props,\n            _this$props5$validate = _this$props5.validateFirst,\n            validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\n            messageVariables = _this$props5.messageVariables;\n\n        var _ref2 = options || {},\n            triggerName = _ref2.triggerName;\n\n        var filteredRules = _this.getRules();\n\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function (rule) {\n            var validateTrigger = rule.validateTrigger;\n\n            if (!validateTrigger) {\n              return true;\n            }\n\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function (e) {\n          return e;\n        }).then(function () {\n          var ruleErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_ERRORS;\n\n          if (_this.validatePromise === rootPromise) {\n            var _ruleErrors$forEach;\n\n            _this.validatePromise = null; // Get errors & warnings\n\n            var nextErrors = [];\n            var nextWarnings = [];\n            (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 ? void 0 : _ruleErrors$forEach.call(ruleErrors, function (_ref3) {\n              var warningOnly = _ref3.rule.warningOnly,\n                  _ref3$errors = _ref3.errors,\n                  errors = _ref3$errors === void 0 ? EMPTY_ERRORS : _ref3$errors;\n\n              if (warningOnly) {\n                nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));\n              } else {\n                nextErrors.push.apply(nextErrors, _toConsumableArray(errors));\n              }\n            });\n            _this.errors = nextErrors;\n            _this.warnings = nextWarnings;\n\n            _this.triggerMetaEvent();\n\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = EMPTY_ERRORS;\n      _this.warnings = EMPTY_ERRORS;\n\n      _this.triggerMetaEvent(); // Force trigger re-render since we need sync renderProps with new meta\n\n\n      _this.reRender();\n\n      return rootPromise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      // Touched or validate or has initialValue\n      if (_this.dirty || _this.props.initialValue !== undefined) {\n        return true;\n      } // Form set initialValue\n\n\n      var fieldContext = _this.props.fieldContext;\n\n      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK),\n          getInitialValue = _fieldContext$getInte.getInitialValue;\n\n      if (getInitialValue(_this.getNamePath()) !== undefined) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    };\n\n    _this.getWarnings = function () {\n      return _this.warnings;\n    };\n\n    _this.isListField = function () {\n      return _this.props.isListField;\n    };\n\n    _this.isList = function () {\n      return _this.props.isList;\n    };\n\n    _this.isPreserve = function () {\n      return _this.props.preserve;\n    };\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        warnings: _this.warnings,\n        name: _this.getNamePath()\n      };\n      return meta;\n    };\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    };\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          validateTrigger = _this$props6.validateTrigger,\n          getValueFromEvent = _this$props6.getValueFromEvent,\n          normalize = _this$props6.normalize,\n          valuePropName = _this$props6.valuePropName,\n          getValueProps = _this$props6.getValueProps,\n          fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var getInternalHooks = fieldContext.getInternalHooks,\n          getFieldsValue = fieldContext.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n\n        _this.triggerMetaEvent();\n\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          initEntityValue = _getInternalHooks2.initEntityValue;\n\n      initEntityValue(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          shouldUpdate = _this$props7.shouldUpdate,\n          fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n            registerField = _getInternalHooks3.registerField;\n\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.triggerMetaEvent(true);\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nfunction WrapperField(_ref5) {\n  var name = _ref5.name,\n      restProps = _objectWithoutProperties(_ref5, _excluded);\n\n  var fieldContext = React.useContext(FieldContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\n\nexport default WrapperField;","import * as React from 'react';\nvar ListContext = /*#__PURE__*/React.createContext(null);\nexport default ListContext;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport FieldContext from './FieldContext';\nimport Field from './Field';\nimport { move as _move, getNamePath } from './utils/valueUtil';\nimport ListContext from './ListContext';\n\nvar List = function List(_ref) {\n  var name = _ref.name,\n      initialValue = _ref.initialValue,\n      children = _ref.children,\n      rules = _ref.rules,\n      validateTrigger = _ref.validateTrigger;\n  var context = React.useContext(FieldContext);\n  var keyRef = React.useRef({\n    keys: [],\n    id: 0\n  });\n  var keyManager = keyRef.current;\n  var prefixName = React.useMemo(function () {\n    var parentPrefixName = getNamePath(context.prefixName) || [];\n    return [].concat(_toConsumableArray(parentPrefixName), _toConsumableArray(getNamePath(name)));\n  }, [context.prefixName, name]);\n  var fieldContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, context), {}, {\n      prefixName: prefixName\n    });\n  }, [context, prefixName]); // List context\n\n  var listContext = React.useMemo(function () {\n    return {\n      getKey: function getKey(namePath) {\n        var len = prefixName.length;\n        var pathName = namePath[len];\n        return [keyManager.keys[pathName], namePath.slice(len + 1)];\n      }\n    };\n  }, [prefixName]); // User should not pass `children` as other type.\n\n  if (typeof children !== 'function') {\n    warning(false, 'Form.List only accepts function as children.');\n    return null;\n  }\n\n  var shouldUpdate = function shouldUpdate(prevValue, nextValue, _ref2) {\n    var source = _ref2.source;\n\n    if (source === 'internal') {\n      return false;\n    }\n\n    return prevValue !== nextValue;\n  };\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: listContext\n  }, /*#__PURE__*/React.createElement(FieldContext.Provider, {\n    value: fieldContext\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: [],\n    shouldUpdate: shouldUpdate,\n    rules: rules,\n    validateTrigger: validateTrigger,\n    initialValue: initialValue,\n    isList: true\n  }, function (_ref3, meta) {\n    var _ref3$value = _ref3.value,\n        value = _ref3$value === void 0 ? [] : _ref3$value,\n        onChange = _ref3.onChange;\n    var getFieldValue = context.getFieldValue;\n\n    var getNewValue = function getNewValue() {\n      var values = getFieldValue(prefixName || []);\n      return values || [];\n    };\n    /**\n     * Always get latest value in case user update fields by `form` api.\n     */\n\n\n    var operations = {\n      add: function add(defaultValue, index) {\n        // Mapping keys\n        var newValue = getNewValue();\n\n        if (index >= 0 && index <= newValue.length) {\n          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys.slice(0, index)), [keyManager.id], _toConsumableArray(keyManager.keys.slice(index)));\n          onChange([].concat(_toConsumableArray(newValue.slice(0, index)), [defaultValue], _toConsumableArray(newValue.slice(index))));\n        } else {\n          if (process.env.NODE_ENV !== 'production' && (index < 0 || index > newValue.length)) {\n            warning(false, 'The second parameter of the add function should be a valid positive number.');\n          }\n\n          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys), [keyManager.id]);\n          onChange([].concat(_toConsumableArray(newValue), [defaultValue]));\n        }\n\n        keyManager.id += 1;\n      },\n      remove: function remove(index) {\n        var newValue = getNewValue();\n        var indexSet = new Set(Array.isArray(index) ? index : [index]);\n\n        if (indexSet.size <= 0) {\n          return;\n        }\n\n        keyManager.keys = keyManager.keys.filter(function (_, keysIndex) {\n          return !indexSet.has(keysIndex);\n        }); // Trigger store change\n\n        onChange(newValue.filter(function (_, valueIndex) {\n          return !indexSet.has(valueIndex);\n        }));\n      },\n      move: function move(from, to) {\n        if (from === to) {\n          return;\n        }\n\n        var newValue = getNewValue(); // Do not handle out of range\n\n        if (from < 0 || from >= newValue.length || to < 0 || to >= newValue.length) {\n          return;\n        }\n\n        keyManager.keys = _move(keyManager.keys, from, to); // Trigger store change\n\n        onChange(_move(newValue, from, to));\n      }\n    };\n    var listValue = value || [];\n\n    if (!Array.isArray(listValue)) {\n      listValue = [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(false, \"Current value of '\".concat(prefixName.join(' > '), \"' is not an array type.\"));\n      }\n    }\n\n    return children(listValue.map(function (__, index) {\n      var key = keyManager.keys[index];\n\n      if (key === undefined) {\n        keyManager.keys[index] = keyManager.id;\n        key = keyManager.keys[index];\n        keyManager.id += 1;\n      }\n\n      return {\n        name: index,\n        key: key,\n        isListField: true\n      };\n    }), operations, meta);\n  })));\n};\n\nexport default List;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar SPLIT = '__@field_split__';\n/**\n * Convert name path into string to fast the fetch speed of Map.\n */\n\nfunction normalize(namePath) {\n  return namePath.map(function (cell) {\n    return \"\".concat(_typeof(cell), \":\").concat(cell);\n  }) // Magic split\n  .join(SPLIT);\n}\n/**\n * NameMap like a `Map` but accepts `string[]` as key.\n */\n\n\nvar NameMap = /*#__PURE__*/function () {\n  function NameMap() {\n    _classCallCheck(this, NameMap);\n\n    this.kvs = new Map();\n  }\n\n  _createClass(NameMap, [{\n    key: \"set\",\n    value: function set(key, value) {\n      this.kvs.set(normalize(key), value);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.kvs.get(normalize(key));\n    }\n  }, {\n    key: \"update\",\n    value: function update(key, updater) {\n      var origin = this.get(key);\n      var next = updater(origin);\n\n      if (!next) {\n        this.delete(key);\n      } else {\n        this.set(key, next);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      this.kvs.delete(normalize(key));\n    } // Since we only use this in test, let simply realize this\n\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      return _toConsumableArray(this.kvs.entries()).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        var cells = key.split(SPLIT);\n        return callback({\n          key: cells.map(function (cell) {\n            var _cell$match = cell.match(/^([^:]*):(.*)$/),\n                _cell$match2 = _slicedToArray(_cell$match, 3),\n                type = _cell$match2[1],\n                unit = _cell$match2[2];\n\n            return type === 'number' ? Number(unit) : unit;\n          }),\n          value: value\n        });\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = {};\n      this.map(function (_ref3) {\n        var key = _ref3.key,\n            value = _ref3.value;\n        json[key.join('.')] = value;\n        return null;\n      });\n      return json;\n    }\n  }]);\n\n  return NameMap;\n}();\n\nexport default NameMap;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport cloneDeep from './utils/cloneDeep';\nimport { defaultValidateMessages } from './utils/messages';\nimport NameMap from './utils/NameMap';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldValue: _this.setFieldValue,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.prevWithoutPreserves = null;\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      var _this$prevWithoutPres;\n\n      var nextStore = setValues({}, initialValues, _this.store); // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 ? void 0 : _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n\n      _this.updateStore(nextStore);\n    }\n  };\n\n  this.destroyForm = function () {\n    var prevWithoutPreserves = new NameMap();\n\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!_this.isMergedPreserve(entity.isPreserve())) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  };\n\n  this.getInitialValue = function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath); // Not cloneDeep when without `namePath`\n\n    return namePath.length ? cloneDeep(initValue) : initValue;\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.watchList = [];\n\n  this.registerWatch = function (callback) {\n    _this.watchList.push(callback);\n\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  };\n\n  this.notifyWatch = function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // No need to cost perf when nothing need to watch\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n\n      _this.watchList.forEach(function (callback) {\n        callback(values, namePath);\n      });\n    }\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.updateStore = function (nextStore) {\n    _this.store = nextStore;\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.updateStore(setValues({}, _this.initialValues));\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      _this.notifyWatch();\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name);\n      namePathList.push(namePath); // Value\n\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  };\n\n  this.isMergedPreserve = function (fieldPreserve) {\n    var mergedPreserve = fieldPreserve !== undefined ? fieldPreserve : _this.preserve;\n    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    var namePath = entity.getNamePath();\n\n    _this.notifyWatch([namePath]); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      if (!_this.isMergedPreserve(preserve) && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true)); // Notify that field is unmount\n\n\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          }); // Dependencies update\n\n\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n\n      _this.notifyWatch([namePath]);\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref3) {\n        var onStoreChange = _ref3.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.triggerDependenciesUpdate = function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n\n    return childrenFields;\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n\n    _this.updateStore(setValue(_this.store, namePath, value));\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n\n    _this.notifyWatch([namePath]); // Dependencies update\n\n\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      var nextStore = setValues(_this.store, store);\n\n      _this.updateStore(nextStore);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n\n    _this.notifyWatch();\n  };\n\n  this.setFieldValue = function (name, value) {\n    _this.setFields([{\n      name: name,\n      value: value\n    }]);\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref4) {\n          var name = _ref4.name,\n              errors = _ref4.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref5) {\n        var fieldName = _ref5.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var _ruleErrors$forEach;\n\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 ? void 0 : _ruleErrors$forEach.call(ruleErrors, function (_ref6) {\n            var warningOnly = _ref6.rule.warningOnly,\n                errors = _ref6.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref7) {\n        var name = _ref7.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n});\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","export function allPromiseFinish(promiseList) {\n  var hasError = false;\n  var count = promiseList.length;\n  var results = [];\n\n  if (!promiseList.length) {\n    return Promise.resolve([]);\n  }\n\n  return new Promise(function (resolve, reject) {\n    promiseList.forEach(function (promise, index) {\n      promise.catch(function (e) {\n        hasError = true;\n        return e;\n      }).then(function (result) {\n        count -= 1;\n        results[index] = result;\n\n        if (count > 0) {\n          return;\n        }\n\n        if (hasError) {\n          reject(results);\n        }\n\n        resolve(results);\n      });\n    });\n  });\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nvar FormContext = /*#__PURE__*/React.createContext({\n  triggerFormChange: function triggerFormChange() {},\n  triggerFormFinish: function triggerFormFinish() {},\n  registerForm: function registerForm() {},\n  unregisterForm: function unregisterForm() {}\n});\n\nvar FormProvider = function FormProvider(_ref) {\n  var validateMessages = _ref.validateMessages,\n      onFormChange = _ref.onFormChange,\n      onFormFinish = _ref.onFormFinish,\n      children = _ref.children;\n  var formContext = React.useContext(FormContext);\n  var formsRef = React.useRef({});\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: _objectSpread(_objectSpread({}, formContext), {}, {\n      validateMessages: _objectSpread(_objectSpread({}, formContext.validateMessages), validateMessages),\n      // =========================================================\n      // =                  Global Form Control                  =\n      // =========================================================\n      triggerFormChange: function triggerFormChange(name, changedFields) {\n        if (onFormChange) {\n          onFormChange(name, {\n            changedFields: changedFields,\n            forms: formsRef.current\n          });\n        }\n\n        formContext.triggerFormChange(name, changedFields);\n      },\n      triggerFormFinish: function triggerFormFinish(name, values) {\n        if (onFormFinish) {\n          onFormFinish(name, {\n            values: values,\n            forms: formsRef.current\n          });\n        }\n\n        formContext.triggerFormFinish(name, values);\n      },\n      registerForm: function registerForm(name, form) {\n        if (name) {\n          formsRef.current = _objectSpread(_objectSpread({}, formsRef.current), {}, _defineProperty({}, name, form));\n        }\n\n        formContext.registerForm(name, form);\n      },\n      unregisterForm: function unregisterForm(name) {\n        var newForms = _objectSpread({}, formsRef.current);\n\n        delete newForms[name];\n        formsRef.current = newForms;\n        formContext.unregisterForm(name);\n      }\n    })\n  }, children);\n};\n\nexport { FormProvider };\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"initialValues\", \"fields\", \"form\", \"preserve\", \"children\", \"component\", \"validateMessages\", \"validateTrigger\", \"onValuesChange\", \"onFieldsChange\", \"onFinish\", \"onFinishFailed\"];\nimport * as React from 'react';\nimport useForm from './useForm';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport FormContext from './FormContext';\nimport { isSimilar } from './utils/valueUtil';\n\nvar Form = function Form(_ref, ref) {\n  var name = _ref.name,\n      initialValues = _ref.initialValues,\n      fields = _ref.fields,\n      form = _ref.form,\n      preserve = _ref.preserve,\n      children = _ref.children,\n      _ref$component = _ref.component,\n      Component = _ref$component === void 0 ? 'form' : _ref$component,\n      validateMessages = _ref.validateMessages,\n      _ref$validateTrigger = _ref.validateTrigger,\n      validateTrigger = _ref$validateTrigger === void 0 ? 'onChange' : _ref$validateTrigger,\n      onValuesChange = _ref.onValuesChange,\n      _onFieldsChange = _ref.onFieldsChange,\n      _onFinish = _ref.onFinish,\n      onFinishFailed = _ref.onFinishFailed,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var formContext = React.useContext(FormContext); // We customize handle event since Context will makes all the consumer re-render:\n  // https://reactjs.org/docs/context.html#contextprovider\n\n  var _useForm = useForm(form),\n      _useForm2 = _slicedToArray(_useForm, 1),\n      formInstance = _useForm2[0];\n\n  var _formInstance$getInte = formInstance.getInternalHooks(HOOK_MARK),\n      useSubscribe = _formInstance$getInte.useSubscribe,\n      setInitialValues = _formInstance$getInte.setInitialValues,\n      setCallbacks = _formInstance$getInte.setCallbacks,\n      setValidateMessages = _formInstance$getInte.setValidateMessages,\n      setPreserve = _formInstance$getInte.setPreserve,\n      destroyForm = _formInstance$getInte.destroyForm; // Pass ref with form instance\n\n\n  React.useImperativeHandle(ref, function () {\n    return formInstance;\n  }); // Register form into Context\n\n  React.useEffect(function () {\n    formContext.registerForm(name, formInstance);\n    return function () {\n      formContext.unregisterForm(name);\n    };\n  }, [formContext, formInstance, name]); // Pass props to store\n\n  setValidateMessages(_objectSpread(_objectSpread({}, formContext.validateMessages), validateMessages));\n  setCallbacks({\n    onValuesChange: onValuesChange,\n    onFieldsChange: function onFieldsChange(changedFields) {\n      formContext.triggerFormChange(name, changedFields);\n\n      if (_onFieldsChange) {\n        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          rest[_key - 1] = arguments[_key];\n        }\n\n        _onFieldsChange.apply(void 0, [changedFields].concat(rest));\n      }\n    },\n    onFinish: function onFinish(values) {\n      formContext.triggerFormFinish(name, values);\n\n      if (_onFinish) {\n        _onFinish(values);\n      }\n    },\n    onFinishFailed: onFinishFailed\n  });\n  setPreserve(preserve); // Set initial value, init store value when first mount\n\n  var mountRef = React.useRef(null);\n  setInitialValues(initialValues, !mountRef.current);\n\n  if (!mountRef.current) {\n    mountRef.current = true;\n  }\n\n  React.useEffect(function () {\n    return destroyForm;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []); // Prepare children by `children` type\n\n  var childrenNode;\n  var childrenRenderProps = typeof children === 'function';\n\n  if (childrenRenderProps) {\n    var values = formInstance.getFieldsValue(true);\n    childrenNode = children(values, formInstance);\n  } else {\n    childrenNode = children;\n  } // Not use subscribe when using render props\n\n\n  useSubscribe(!childrenRenderProps); // Listen if fields provided. We use ref to save prev data here to avoid additional render\n\n  var prevFieldsRef = React.useRef();\n  React.useEffect(function () {\n    if (!isSimilar(prevFieldsRef.current || [], fields || [])) {\n      formInstance.setFields(fields || []);\n    }\n\n    prevFieldsRef.current = fields;\n  }, [fields, formInstance]);\n  var formContextValue = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, formInstance), {}, {\n      validateTrigger: validateTrigger\n    });\n  }, [formInstance, validateTrigger]);\n  var wrapperNode = /*#__PURE__*/React.createElement(FieldContext.Provider, {\n    value: formContextValue\n  }, childrenNode);\n\n  if (Component === false) {\n    return wrapperNode;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, restProps, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      formInstance.submit();\n    },\n    onReset: function onReset(event) {\n      var _restProps$onReset;\n\n      event.preventDefault();\n      formInstance.resetFields();\n      (_restProps$onReset = restProps.onReset) === null || _restProps$onReset === void 0 ? void 0 : _restProps$onReset.call(restProps, event);\n    }\n  }), wrapperNode);\n};\n\nexport default Form;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\nexport function stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\n\nfunction useWatch() {\n  var dependencies = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var form = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init; // Warning if not exist form instance\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n\n    var getFieldsValue = formInstance.getFieldsValue,\n        getInternalHooks = formInstance.getInternalHooks;\n\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        registerWatch = _getInternalHooks.registerWatch;\n\n    var cancelRegister = registerWatch(function (store) {\n      var newValue = getValue(store, namePathRef.current);\n      var nextValueStr = stringify(newValue); // Compare stringify in case it's nest object\n\n      if (valueStrRef.current !== nextValueStr) {\n        valueStrRef.current = nextValueStr;\n        setValue(newValue);\n      }\n    }); // TODO: We can improve this perf in future\n\n    var initialValue = getValue(getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  }, // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return value;\n}\n\nexport default useWatch;","import * as React from 'react';\nimport Field from './Field';\nimport List from './List';\nimport useForm from './useForm';\nimport FieldForm from './Form';\nimport { FormProvider } from './FormContext';\nimport FieldContext from './FieldContext';\nimport ListContext from './ListContext';\nimport useWatch from './useWatch';\nvar InternalForm = /*#__PURE__*/React.forwardRef(FieldForm);\nvar RefForm = InternalForm;\nRefForm.FormProvider = FormProvider;\nRefForm.Field = Field;\nRefForm.List = List;\nRefForm.useForm = useForm;\nRefForm.useWatch = useWatch;\nexport { Field, List, useForm, FormProvider, FieldContext, ListContext, useWatch };\nexport default RefForm;","/* eslint no-console:0 */\n\nimport {\n  ValidateError,\n  ValidateOption,\n  RuleValuePackage,\n  InternalRuleItem,\n  SyncErrorType,\n  RuleType,\n  Value,\n  Values,\n} from './interface';\n\nconst formatRegExp = /%[sdj%]/g;\n\ndeclare var ASYNC_VALIDATOR_NO_WARNING;\n\nexport let warning: (type: string, errors: SyncErrorType[]) => void = () => {};\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (\n      typeof console !== 'undefined' &&\n      console.warn &&\n      typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined'\n    ) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(\n  errors: ValidateError[],\n): Record<string, ValidateError[]> {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(\n  template: ((...args: any[]) => string) | string,\n  ...args: any[]\n): string {\n  let i = 0;\n  const len = args.length;\n  if (typeof template === 'function') {\n    return template.apply(null, args);\n  }\n  if (typeof template === 'string') {\n    let str = template.replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return (Number(args[i++]) as unknown) as string;\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return template;\n}\n\nfunction isNativeStringType(type: string) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value: Value, type?: string) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj: object) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  const results: ValidateError[] = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors: ValidateError[]) {\n    results.push(...(errors || []));\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors: ValidateError[]) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr: Record<string, RuleValuePackage[]>) {\n  const ret: RuleValuePackage[] = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push(...(objArr[k] || []));\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  errors: ValidateError[];\n  fields: Record<string, ValidateError[]>;\n\n  constructor(\n    errors: ValidateError[],\n    fields: Record<string, ValidateError[]>,\n  ) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\ntype ValidateFunc = (\n  data: RuleValuePackage,\n  doIt: (errors: ValidateError[]) => void,\n) => void;\n\nexport function asyncMap(\n  objArr: Record<string, RuleValuePackage[]>,\n  option: ValidateOption,\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n  source: Values,\n): Promise<Values> {\n  if (option.first) {\n    const pending = new Promise<Values>((resolve, reject) => {\n      const next = (errors: ValidateError[]) => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve(source);\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  const firstFields =\n    option.firstFields === true\n      ? Object.keys(objArr)\n      : option.firstFields || [];\n\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results: ValidateError[] = [];\n  const pending = new Promise<Values>((resolve, reject) => {\n    const next = (errors: ValidateError[]) => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n              new AsyncValidationError(results, convertFieldsError(results)),\n            )\n          : resolve(source);\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nfunction isErrorObj(\n  obj: ValidateError | string | (() => string),\n): obj is ValidateError {\n  return !!(obj && (obj as ValidateError).message !== undefined);\n}\n\nfunction getValue(value: Values, path: string[]) {\n  let v = value;\n  for (let i = 0; i < path.length; i++) {\n    if (v == undefined) {\n      return v;\n    }\n    v = v[path[i]];\n  }\n  return v;\n}\n\nexport function complementError(rule: InternalRuleItem, source: Values) {\n  return (oe: ValidateError | (() => string) | string): ValidateError => {\n    let fieldValue;\n    if (rule.fullFields) {\n      fieldValue = getValue(source, rule.fullFields);\n    } else {\n      fieldValue = source[(oe as any).field || rule.fullField];\n    }\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      fieldValue,\n      field: ((oe as unknown) as ValidateError).field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge<T extends object>(target: T, source: Partial<T>): T {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n","import { ExecuteRule } from '../interface';\nimport { format, isEmptyValue } from '../util';\n\nconst required: ExecuteRule = (rule, value, source, errors, options, type) => {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\n\nexport default required;\n","// https://github.com/kevva/url-regex/blob/master/index.js\nlet urlReg: RegExp;\n\nexport default () => {\n  if (urlReg) {\n    return urlReg;\n  }\n\n  const word = '[a-fA-F\\\\d:]';\n  const b = options =>\n    options && options.includeBoundaries\n      ? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n      : '';\n\n  const v4 =\n    '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\n  const v6seg = '[a-fA-F\\\\d]{1,4}';\n  const v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`\n    .replace(/\\s*\\/\\/.*$/gm, '')\n    .replace(/\\n/g, '')\n    .trim();\n\n  // Pre-compile only the exact regexes because adding a global flag make regexes stateful\n  const v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\n  const v4exact = new RegExp(`^${v4}$`);\n  const v6exact = new RegExp(`^${v6}$`);\n\n  const ip = options =>\n    options && options.exact\n      ? v46Exact\n      : new RegExp(\n          `(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(\n            options,\n          )})`,\n          'g',\n        );\n\n  ip.v4 = (options?) =>\n    options && options.exact\n      ? v4exact\n      : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\n  ip.v6 = (options?) =>\n    options && options.exact\n      ? v6exact\n      : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\n  const protocol = `(?:(?:[a-z]+:)?//)`;\n  const auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n  const ipv4 = ip.v4().source;\n  const ipv6 = ip.v6().source;\n  const host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n  const domain =\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n  const tld = `(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))`;\n  const port = '(?::\\\\d{2,5})?';\n  const path = '(?:[/?#][^\\\\s\"]*)?';\n  const regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ipv4}|${ipv6}|${host}${domain}${tld})${port}${path}`;\n  urlReg = new RegExp(`(?:^${regex}$)`, 'i');\n  return urlReg;\n};\n","import { ExecuteRule, Value } from '../interface';\nimport { format } from '../util';\nimport required from './required';\nimport getUrlRegex from './url';\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  // url: new RegExp(\n  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n  //   'i',\n  // ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value: Value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value: Value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value: Value) {\n    return Array.isArray(value);\n  },\n  regexp(value: Value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value: Value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value: Value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value: Value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value: Value) {\n    return typeof value === 'function';\n  },\n  email(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 320 &&\n      !!value.match(pattern.email)\n    );\n  },\n  url(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 2048 &&\n      !!value.match(getUrlRegex())\n    );\n  },\n  hex(value: Value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\nconst type: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        format(options.messages.types[ruleType], rule.fullField, rule.type),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n};\n\nexport default type;\n","import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nconst whitespace: ExecuteRule = (rule, value, source, errors, options) => {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\n\nexport default whitespace;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst range: ExecuteRule = (rule, value, source, errors, options) => {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      format(options.messages[key].range, rule.fullField, rule.min, rule.max),\n    );\n  }\n};\n\nexport default range;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteRule = (rule, value, source, errors, options) => {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')),\n    );\n  }\n};\n\nexport default enumerable;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst pattern: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n};\n\nexport default pattern;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst type: ExecuteValidator = (rule, value, callback, source, options) => {\n  const ruleType = rule.type;\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default type;\n","import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst string: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default string;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst method: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default method;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst number: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default number;\n","import { isEmptyValue } from '../util';\nimport rules from '../rule';\nimport { ExecuteValidator } from '../interface';\n\nconst boolean: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default boolean;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst regexp: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default regexp;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst integer: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default integer;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst floatFn: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default floatFn;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule/index';\n\nconst array: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default array;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst object: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default object;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteValidator = (\n  rule,\n  value,\n  callback,\n  source,\n  options,\n) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default enumerable;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst pattern: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default pattern;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst date: ExecuteValidator = (rule, value, callback, source, options) => {\n  // console.log('integer rule called %j', rule);\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default date;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\n\nconst required: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n};\n\nexport default required;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst any: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n};\n\nexport default any;\n","import { InternalValidateMessages } from './interface';\n\nexport function newMessages(): InternalValidateMessages {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n","import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\nimport {\n  InternalRuleItem,\n  InternalValidateMessages,\n  Rule,\n  RuleItem,\n  Rules,\n  ValidateCallback,\n  ValidateMessages,\n  ValidateOption,\n  Values,\n  RuleValuePackage,\n  ValidateError,\n  ValidateFieldsError,\n  SyncErrorType,\n  ValidateResult,\n} from './interface';\n\nexport * from './interface';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nclass Schema {\n  // ========================= Static =========================\n  static register = function register(type: string, validator) {\n    if (typeof validator !== 'function') {\n      throw new Error(\n        'Cannot register a validator by type, validator is not a function',\n      );\n    }\n    validators[type] = validator;\n  };\n\n  static warning = warning;\n\n  static messages = defaultMessages;\n\n  static validators = validators;\n\n  // ======================== Instance ========================\n  rules: Record<string, RuleItem[]> = null;\n  _messages: InternalValidateMessages = defaultMessages;\n\n  constructor(descriptor: Rules) {\n    this.define(descriptor);\n  }\n\n  define(rules: Rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n\n    Object.keys(rules).forEach(name => {\n      const item: Rule = rules[name];\n      this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  }\n\n  messages(messages?: ValidateMessages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  }\n\n  validate(\n    source: Values,\n    option?: ValidateOption,\n    callback?: ValidateCallback,\n  ): Promise<Values>;\n  validate(source: Values, callback: ValidateCallback): Promise<Values>;\n  validate(source: Values): Promise<Values>;\n\n  validate(source_: Values, o: any = {}, oc: any = () => {}): Promise<Values> {\n    let source: Values = source_;\n    let options: ValidateOption = o;\n    let callback: ValidateCallback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n      return Promise.resolve(source);\n    }\n\n    function complete(results: (ValidateError | ValidateError[])[]) {\n      let errors: ValidateError[] = [];\n      let fields: ValidateFieldsError = {};\n\n      function add(e: ValidateError | ValidateError[]) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (let i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        (callback as (\n          errors: ValidateError[],\n          fields: ValidateFieldsError,\n        ) => void)(errors, fields);\n      }\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n\n    const series: Record<string, RuleValuePackage[]> = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      const arr = this.rules[z];\n      let value = source[z];\n      arr.forEach(r => {\n        let rule: InternalRuleItem = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n\n        // Fill validator. Skip if nothing need to validate\n        rule.validator = this.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullField(key: string, schema: RuleItem) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n            fullFields: rule.fullFields ? [...rule.fullFields, key] : [key],\n          };\n        }\n\n        function cb(e: SyncErrorType | SyncErrorType[] = []) {\n          let errorList = Array.isArray(e) ? e : [e];\n          if (!options.suppressWarning && errorList.length) {\n            Schema.warning('async-validator:', errorList);\n          }\n          if (errorList.length && rule.message !== undefined) {\n            errorList = [].concat(rule.message);\n          }\n\n          // Fill error info\n          let filledErrors = errorList.map(complementError(rule, source));\n\n          if (options.first && filledErrors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(filledErrors);\n          }\n          if (!deep) {\n            doIt(filledErrors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                filledErrors = []\n                  .concat(rule.message)\n                  .map(complementError(rule, source));\n              } else if (options.error) {\n                filledErrors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(filledErrors);\n            }\n\n            let fieldsSchema: Record<string, Rule> = {};\n            if (rule.defaultField) {\n              Object.keys(data.value).map(key => {\n                fieldsSchema[key] = rule.defaultField;\n              });\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n\n            const paredFieldsSchema: Record<string, RuleItem[]> = {};\n\n            Object.keys(fieldsSchema).forEach(field => {\n              const fieldSchema = fieldsSchema[field];\n              const fieldSchemaList = Array.isArray(fieldSchema)\n                ? fieldSchema\n                : [fieldSchema];\n              paredFieldsSchema[field] = fieldSchemaList.map(\n                addFullField.bind(null, field),\n              );\n            });\n            const schema = new Schema(paredFieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (filledErrors && filledErrors.length) {\n                finalErrors.push(...filledErrors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res: ValidateResult;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          try {\n            res = rule.validator(rule, data.value, cb, data.source, options);\n          } catch (error) {\n            console.error?.(error);\n            // rethrow to report error\n            if (!options.suppressValidatorError) {\n              setTimeout(() => {\n                throw error;\n              }, 0);\n            }\n            cb(error.message);\n          }\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(\n              typeof rule.message === 'function'\n                ? rule.message(rule.fullField || rule.field)\n                : rule.message || `${rule.fullField || rule.field} fails`,\n            );\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && (res as Promise<void>).then) {\n          (res as Promise<void>).then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n      source,\n    );\n  }\n\n  getType(rule: InternalRuleItem) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  }\n\n  getValidationMethod(rule: InternalRuleItem) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || undefined;\n  }\n}\n\nexport default Schema;\n"],"sourceRoot":""}